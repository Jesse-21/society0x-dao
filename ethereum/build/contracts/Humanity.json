{
  "contractName": "Humanity",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FINAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FINAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20 token that can be used to vote on applications to the Humanity registry.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Humanity\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Rapport.sol\":\"Humanity\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Rapport.sol\":{\"keccak256\":\"0xde47b2cf746ce0c2777df6db501ffb81f0da098575fa09f88cee797fbb640114\",\"urls\":[\"bzzr://cf1764c9dc635e02ab8544e99c0f6188630657ae2eabf31b6773791d5912df01\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4d2395bda94bb5bb6c524ecda59f07fd6a6d754277e9982143c3858e35145189\",\"urls\":[\"bzzr://5d8b1a44381d54d7c5db45eeb163e74a1c8f61152780eb0769442fbd19aeb52b\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd55e3d85f62c85440462699afc6dce60fa0a889ca9c52ff0139a0ab0373c1ffa\",\"urls\":[\"bzzr://c6c51d89257be787cf65f50a7268b1f3f0ac7876c9278f3cacee23e814eb05c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600581526020017f302e302e310000000000000000000000000000000000000000000000000000008152506003908051906020019062000051929190620002f4565b503480156200005f57600080fd5b506040516020806200209c8339810180604052620000819190810190620003b9565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e8336acecb8f27f4200f3a000000620000ef640100000000026401000000009004565b5062000550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000162576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015990620004a0565b60405180910390fd5b62000187816002546200029c6401000000000262001163179091906401000000009004565b600281905550620001ee816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200029c6401000000000262001163179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002909190620004e4565b60405180910390a35050565b600080828401905083811015620002ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e190620004c2565b60405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033757805160ff191683800117855562000368565b8280016001018555821562000368579182015b82811115620003675782518255916020019190600101906200034a565b5b5090506200037791906200037b565b5090565b620003a091905b808211156200039c57600081600090555060010162000382565b5090565b90565b6000620003b182516200051c565b905092915050565b600060208284031215620003cc57600080fd5b6000620003dc84828501620003a3565b91505092915050565b6000620003f460298362000501565b91507f45524332303a3a5f6d696e743a2043616e6e6f74206d696e7420746f2061646460008301527f72657373207a65726f00000000000000000000000000000000000000000000006020830152604082019050919050565b60006200045c601f8362000501565b91507f536166654d6174683a3a6164643a20496e7465676572206f766572666c6f77006000830152602082019050919050565b6200049a8162000512565b82525050565b60006020820190508181036000830152620004bb81620003e5565b9050919050565b60006020820190508181036000830152620004dd816200044d565b9050919050565b6000602082019050620004fb60008301846200048f565b92915050565b600082825260208201905092915050565b6000819050919050565b6000620005298262000530565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b611b3c80620005606000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c01000000000000000000000000000000000000000000000000000000009004806340c10f19116100b457806395d89b411161008357806395d89b41146102d0578063a457c2d7146102ee578063a9059cbb1461031e578063dd62ed3e1461034e5761011d565b806340c10f191461024857806354fd4d501461026457806370a08231146102825780637b103999146102b25761011d565b80632ff2e9dc116100f05780632ff2e9dc146101be578063313ce567146101dc57806339509351146101fa57806339605da21461022a5761011d565b806306fdde0314610122578063095ea7b31461014057806318160ddd1461017057806323b872dd1461018e575b600080fd5b61012a61037e565b6040516101379190611899565b60405180910390f35b61015a6004803603610155919081019061141c565b6103b7565b604051610167919061187e565b60405180910390f35b610178610518565b60405161018591906119db565b60405180910390f35b6101a860048036036101a391908101906113cd565b610522565b6040516101b5919061187e565b60405180910390f35b6101c661072a565b6040516101d391906119db565b60405180910390f35b6101e4610739565b6040516101f191906119f6565b60405180910390f35b610214600480360361020f919081019061141c565b61073e565b604051610221919061187e565b60405180910390f35b6102326109a9565b60405161023f91906119db565b60405180910390f35b610262600480360361025d919081019061141c565b6109b9565b005b61026c610abf565b6040516102799190611899565b60405180910390f35b61029c60048036036102979190810190611368565b610b5d565b6040516102a991906119db565b60405180910390f35b6102ba610ba5565b6040516102c79190611863565b60405180910390f35b6102d8610bcb565b6040516102e59190611899565b60405180910390f35b6103086004803603610303919081019061141c565b610c04565b604051610315919061187e565b60405180910390f35b6103386004803603610333919081019061141c565b610e6f565b604051610345919061187e565b60405180910390f35b61036860048036036103639190810190611391565b610e86565b60405161037591906119db565b60405180910390f35b6040518060400160405280600781526020017f526170706f72740000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610428576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041f9061195b565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161050691906119db565b60405180910390a36001905092915050565b6000600254905090565b60006105b382600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0d90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061063e848484610f63565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161071791906119db565b60405180910390a3600190509392505050565b6acecb8f27f4200f3a00000081565b601281565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a69061199b565b60405180910390fd5b61083e82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461116390919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161099791906119db565b60405180910390a36001905092915050565b6b204fce5e3e2502611000000081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a409061191b565b60405180910390fd5b6b204fce5e3e25026110000000610a7082610a62610518565b61116390919063ffffffff16565b1115610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa8906119bb565b60405180910390fd5b610abb82826111b8565b5050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b505050505081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600381526020017f524150000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6c906118bb565b60405180910390fd5b610d0482600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0d90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610e5d91906119db565b60405180910390a36001905092915050565b6000610e7c338484610f63565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f49906118db565b60405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca906118fb565b60405180910390fd5b611024816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0d90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110b7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461116390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161115691906119db565b60405180910390a3505050565b6000808284019050838110156111ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a59061197b565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121f9061193b565b60405180910390fd5b61123d8160025461116390919063ffffffff16565b600281905550611294816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461116390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161133491906119db565b60405180910390a35050565b600061134c8235611a82565b905092915050565b60006113608235611ab4565b905092915050565b60006020828403121561137a57600080fd5b600061138884828501611340565b91505092915050565b600080604083850312156113a457600080fd5b60006113b285828601611340565b92505060206113c385828601611340565b9150509250929050565b6000806000606084860312156113e257600080fd5b60006113f086828701611340565b935050602061140186828701611340565b925050604061141286828701611354565b9150509250925092565b6000806040838503121561142f57600080fd5b600061143d85828601611340565b925050602061144e85828601611354565b9150509250929050565b61146181611a2d565b82525050565b61147081611a3f565b82525050565b600061148182611a11565b61148b8185611a1c565b935061149b818560208601611abe565b6114a481611af1565b840191505092915050565b60006114bc604483611a1c565b91507f45524332303a3a6465637265617365416c6c6f77616e63653a2043616e6e6f7460008301527f20646563726561736520616c6c6f77616e636520666f7220616464726573732060208301527f7a65726f000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000611548602083611a1c565b91507f536166654d6174683a3a7375623a20496e746567657220756e646572666c6f776000830152602082019050919050565b6000611588603183611a1c565b91507f45524332303a3a5f7472616e736665723a2043616e6e6f74207472616e73666560008301527f7220746f2061646472657373207a65726f0000000000000000000000000000006020830152604082019050919050565b60006115ee603483611a1c565b91507f526170706f72743a3a6d696e743a204f6e6c792074686520726567697374727960008301527f2063616e206d696e74206e657720746f6b656e730000000000000000000000006020830152604082019050919050565b6000611654602983611a1c565b91507f45524332303a3a5f6d696e743a2043616e6e6f74206d696e7420746f2061646460008301527f72657373207a65726f00000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ba602b83611a1c565b91507f45524332303a3a617070726f76653a2043616e6e6f7420617070726f7665206160008301527f646472657373207a65726f0000000000000000000000000000000000000000006020830152604082019050919050565b6000611720601f83611a1c565b91507f536166654d6174683a3a6164643a20496e7465676572206f766572666c6f77006000830152602082019050919050565b6000611760604483611a1c565b91507f45524332303a3a696e637265617365416c6c6f77616e63653a2043616e6e6f7460008301527f20696e63726561736520616c6c6f77616e636520666f7220616464726573732060208301527f7a65726f000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b60006117ec602383611a1c565b91507f526170706f72743a3a6d696e743a20457863656564732066696e616c2073757060008301527f706c7900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61184e81611a6b565b82525050565b61185d81611a75565b82525050565b60006020820190506118786000830184611458565b92915050565b60006020820190506118936000830184611467565b92915050565b600060208201905081810360008301526118b38184611476565b905092915050565b600060208201905081810360008301526118d4816114af565b9050919050565b600060208201905081810360008301526118f48161153b565b9050919050565b600060208201905081810360008301526119148161157b565b9050919050565b60006020820190508181036000830152611934816115e1565b9050919050565b6000602082019050818103600083015261195481611647565b9050919050565b60006020820190508181036000830152611974816116ad565b9050919050565b6000602082019050818103600083015261199481611713565b9050919050565b600060208201905081810360008301526119b481611753565b9050919050565b600060208201905081810360008301526119d4816117df565b9050919050565b60006020820190506119f06000830184611845565b92915050565b6000602082019050611a0b6000830184611854565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611a3882611a4b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a8d82611a94565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611adc578082015181840152602081019050611ac1565b83811115611aeb576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820ca6d01a79b691afeb358b2ba6e5d78040dbe9c288916bf197210ab2cd1464fde6c6578706572696d656e74616cf50037",
  "deployedBytecode": "",
  "sourceMap": "253:787:7:-;;;416:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;626:118;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:118:7;;;;;;;;;;;;;;;;;;;;;;685:9;674:8;;:20;;;;;;;;;;;;;;;;;;704:33;710:10;492:12;704:5;;;:33;;;:::i;:::-;626:118;253:787;;6442:308:22;6535:1;6516:21;;:7;:21;;;;6508:75;;;;;;;;;;;;;;;;;;;;;;6609:23;6626:5;6609:12;;:16;;;;;;:23;;;;;:::i;:::-;6594:12;:38;;;;6663:29;6686:5;6663:9;:18;6673:7;6663:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;6642:9;:18;6652:7;6642:18;;;;;;;;;;;;;;;:50;;;;6728:7;6707:36;;6724:1;6707:36;;;6737:5;6707:36;;;;;;;;;;;;;;;6442:308;;:::o;1541:180:21:-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:50;;;;;;;;;;;;;;;;;;;;;;1713:1;1706:8;;;1541:180;;;;:::o;253:787:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;405:465;;565:67;629:2;624:3;565:67;;;558:74;;665:66;661:1;656:3;652:11;645:87;766:66;761:2;756:3;752:12;745:88;861:2;856:3;852:12;845:19;;551:319;;;;879:364;;1039:67;1103:2;1098:3;1039:67;;;1032:74;;1139:66;1135:1;1130:3;1126:11;1119:87;1234:2;1229:3;1225:12;1218:19;;1025:218;;;;1251:120;1334:31;1359:5;1334:31;;;1329:3;1322:44;1316:55;;;1378:407;;1569:2;1558:9;1554:18;1546:26;;1619:9;1613:4;1609:20;1605:1;1594:9;1590:17;1583:47;1644:131;1770:4;1644:131;;;1636:139;;1540:245;;;;1792:407;;1983:2;1972:9;1968:18;1960:26;;2033:9;2027:4;2023:20;2019:1;2008:9;2004:17;1997:47;2058:131;2184:4;2058:131;;;2050:139;;1954:245;;;;2206:213;;2324:2;2313:9;2309:18;2301:26;;2338:71;2406:1;2395:9;2391:17;2382:6;2338:71;;;2295:124;;;;;2427:163;;2542:6;2537:3;2530:19;2579:4;2574:3;2570:14;2555:29;;2523:67;;;;;2598:79;;2667:5;2656:16;;2650:27;;;;2684:105;;2753:31;2778:5;2753:31;;;2742:42;;2736:53;;;;2796:128;;2876:42;2869:5;2865:54;2854:65;;2848:76;;;;253:787:7;;;;;;;",
  "deployedSourceMap": "253:787:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:787:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:39;;;:::i;:::-;;;;;;;;;;;;;;;;2735:285:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;936:89;;;:::i;:::-;;;;;;;;;;;;;;;;3483:294;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;454:50:7;;;:::i;:::-;;;;;;;;;;;;;;;;375:35;;;:::i;:::-;;;;;;;;;;;;;;;;4280:389:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;525:50:7;;;:::i;:::-;;;;;;;;;;;;;;;;750:287;;;;;;;;;;;;;;;;:::i;:::-;;416:31;;;:::i;:::-;;;;;;;;;;;;;;;;1234:104:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;596:23:7;;;:::i;:::-;;;;;;;;;;;;;;;;332:37;;;:::i;:::-;;;;;;;;;;;;;;;;5177:399:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1962:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1669:129;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;287:39:7;;;;;;;;;;;;;;;;;;;:::o;2735:285:22:-;2800:4;2843:1;2824:21;;:7;:21;;;;2816:77;;;;;;;;;;;;;;;;;;;;;;2936:5;2904:8;:20;2913:10;2904:20;;;;;;;;;;;;;;;:29;2925:7;2904:29;;;;;;;;;;;;;;;:37;;;;2977:7;2956:36;;2965:10;2956:36;;;2986:5;2956:36;;;;;;;;;;;;;;;3009:4;3002:11;;2735:285;;;;:::o;936:89::-;980:7;1006:12;;999:19;;936:89;:::o;3483:294::-;3562:4;3607:37;3638:5;3607:8;:14;3616:4;3607:14;;;;;;;;;;;;;;;:26;3622:10;3607:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3578:8;:14;3587:4;3578:14;;;;;;;;;;;;;;;:26;3593:10;3578:26;;;;;;;;;;;;;;;:66;;;;3654:26;3664:4;3670:2;3674:5;3654:9;:26::i;:::-;3710:10;3695:54;;3704:4;3695:54;;;3722:8;:14;3731:4;3722:14;;;;;;;;;;;;;;;:26;3737:10;3722:26;;;;;;;;;;;;;;;;3695:54;;;;;;;;;;;;;;;3766:4;3759:11;;3483:294;;;;;:::o;454:50:7:-;492:12;454:50;:::o;375:35::-;408:2;375:35;:::o;4280:389:22:-;4360:4;4403:1;4384:21;;:7;:21;;;;4376:102;;;;;;;;;;;;;;;;;;;;;;4521:45;4555:10;4521:8;:20;4530:10;4521:20;;;;;;;;;;;;;;;:29;4542:7;4521:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4489:8;:20;4498:10;4489:20;;;;;;;;;;;;;;;:29;4510:7;4489:29;;;;;;;;;;;;;;;:77;;;;4602:7;4581:60;;4590:10;4581:60;;;4611:8;:20;4620:10;4611:20;;;;;;;;;;;;;;;:29;4632:7;4611:29;;;;;;;;;;;;;;;;4581:60;;;;;;;;;;;;;;;4658:4;4651:11;;4280:389;;;;:::o;525:50:7:-;561:14;525:50;:::o;750:287::-;835:8;;;;;;;;;;;821:22;;:10;:22;;;813:87;;;;;;;;;;;;;;;;;;;;;;561:14;918:24;936:5;918:13;:11;:13::i;:::-;:17;;:24;;;;:::i;:::-;:40;;910:88;;;;;;;;;;;;;;;;;;;;;;1009:21;1015:7;1024:5;1009;:21::i;:::-;750:287;;:::o;416:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1234:104:22:-;1289:7;1315:9;:16;1325:5;1315:16;;;;;;;;;;;;;;;;1308:23;;1234:104;;;:::o;596:23:7:-;;;;;;;;;;;;;:::o;332:37::-;;;;;;;;;;;;;;;;;;;:::o;5177:399:22:-;5262:4;5305:1;5286:21;;:7;:21;;;;5278:102;;;;;;;;;;;;;;;;;;;;;;5423:50;5457:15;5423:8;:20;5432:10;5423:20;;;;;;;;;;;;;;;:29;5444:7;5423:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5391:8;:20;5400:10;5391:20;;;;;;;;;;;;;;;:29;5412:7;5391:29;;;;;;;;;;;;;;;:82;;;;5509:7;5488:60;;5497:10;5488:60;;;5518:8;:20;5527:10;5518:20;;;;;;;;;;;;;;;:29;5539:7;5518:29;;;;;;;;;;;;;;;;5488:60;;;;;;;;;;;;;;;5565:4;5558:11;;5177:399;;;;:::o;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;2088:4;2081:11;;1962:137;;;;:::o;1669:129::-;1741:7;1767:8;:15;1776:5;1767:15;;;;;;;;;;;;;;;:24;1783:7;1767:24;;;;;;;;;;;;;;;;1760:31;;1669:129;;;;:::o;1279:181:21:-;1337:7;1369:1;1364;:6;;1356:51;;;;;;;;;;;;;;;;;;;;;;1417:9;1433:1;1429;:5;1417:17;;1452:1;1445:8;;;1279:181;;;;:::o;5790:309:22:-;5891:1;5877:16;;:2;:16;;;;5869:78;;;;;;;;;;;;;;;;;;;;;;5976:26;5996:5;5976:9;:15;5986:4;5976:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5958:9;:15;5968:4;5958:15;;;;;;;;;;;;;;;:44;;;;6028:24;6046:5;6028:9;:13;6038:2;6028:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;6012:9;:13;6022:2;6012:13;;;;;;;;;;;;;;;:40;;;;6082:2;6067:25;;6076:4;6067:25;;;6086:5;6067:25;;;;;;;;;;;;;;;5790:309;;;:::o;1541:180:21:-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:50;;;;;;;;;;;;;;;;;;;;;;1713:1;1706:8;;;1541:180;;;;:::o;6442:308:22:-;6535:1;6516:21;;:7;:21;;;;6508:75;;;;;;;;;;;;;;;;;;;;;;6609:23;6626:5;6609:12;;:16;;:23;;;;:::i;:::-;6594:12;:38;;;;6663:29;6686:5;6663:9;:18;6673:7;6663:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6642:9;:18;6652:7;6642:18;;;;;;;;;;;;;;;:50;;;;6728:7;6707:36;;6724:1;6707:36;;;6737:5;6707:36;;;;;;;;;;;;;;;6442:308;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:118;;197:46;235:6;222:20;197:46;;;188:55;;182:66;;;;;255:241;;359:2;347:9;338:7;334:23;330:32;327:2;;;375:1;372;365:12;327:2;410:1;427:53;472:7;463:6;452:9;448:22;427:53;;;417:63;;389:97;321:175;;;;;503:366;;;624:2;612:9;603:7;599:23;595:32;592:2;;;640:1;637;630:12;592:2;675:1;692:53;737:7;728:6;717:9;713:22;692:53;;;682:63;;654:97;782:2;800:53;845:7;836:6;825:9;821:22;800:53;;;790:63;;761:98;586:283;;;;;;876:491;;;;1014:2;1002:9;993:7;989:23;985:32;982:2;;;1030:1;1027;1020:12;982:2;1065:1;1082:53;1127:7;1118:6;1107:9;1103:22;1082:53;;;1072:63;;1044:97;1172:2;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;;;1180:63;;1151:98;1280:2;1298:53;1343:7;1334:6;1323:9;1319:22;1298:53;;;1288:63;;1259:98;976:391;;;;;;1374:366;;;1495:2;1483:9;1474:7;1470:23;1466:32;1463:2;;;1511:1;1508;1501:12;1463:2;1546:1;1563:53;1608:7;1599:6;1588:9;1584:22;1563:53;;;1553:63;;1525:97;1653:2;1671:53;1716:7;1707:6;1696:9;1692:22;1671:53;;;1661:63;;1632:98;1457:283;;;;;;1747:120;1830:31;1855:5;1830:31;;;1825:3;1818:44;1812:55;;;1874:111;1951:28;1973:5;1951:28;;;1946:3;1939:41;1933:52;;;1992:339;;2100:35;2129:5;2100:35;;;2147:71;2211:6;2206:3;2147:71;;;2140:78;;2223:52;2268:6;2263:3;2256:4;2249:5;2245:16;2223:52;;;2296:29;2318:6;2296:29;;;2291:3;2287:39;2280:46;;2080:251;;;;;;2339:566;;2499:67;2563:2;2558:3;2499:67;;;2492:74;;2599:66;2595:1;2590:3;2586:11;2579:87;2700:66;2695:2;2690:3;2686:12;2679:88;2801:66;2796:2;2791:3;2787:12;2780:88;2896:2;2891:3;2887:12;2880:19;;2485:420;;;;2914:364;;3074:67;3138:2;3133:3;3074:67;;;3067:74;;3174:66;3170:1;3165:3;3161:11;3154:87;3269:2;3264:3;3260:12;3253:19;;3060:218;;;;3287:465;;3447:67;3511:2;3506:3;3447:67;;;3440:74;;3547:66;3543:1;3538:3;3534:11;3527:87;3648:66;3643:2;3638:3;3634:12;3627:88;3743:2;3738:3;3734:12;3727:19;;3433:319;;;;3761:465;;3921:67;3985:2;3980:3;3921:67;;;3914:74;;4021:66;4017:1;4012:3;4008:11;4001:87;4122:66;4117:2;4112:3;4108:12;4101:88;4217:2;4212:3;4208:12;4201:19;;3907:319;;;;4235:465;;4395:67;4459:2;4454:3;4395:67;;;4388:74;;4495:66;4491:1;4486:3;4482:11;4475:87;4596:66;4591:2;4586:3;4582:12;4575:88;4691:2;4686:3;4682:12;4675:19;;4381:319;;;;4709:465;;4869:67;4933:2;4928:3;4869:67;;;4862:74;;4969:66;4965:1;4960:3;4956:11;4949:87;5070:66;5065:2;5060:3;5056:12;5049:88;5165:2;5160:3;5156:12;5149:19;;4855:319;;;;5183:364;;5343:67;5407:2;5402:3;5343:67;;;5336:74;;5443:66;5439:1;5434:3;5430:11;5423:87;5538:2;5533:3;5529:12;5522:19;;5329:218;;;;5556:566;;5716:67;5780:2;5775:3;5716:67;;;5709:74;;5816:66;5812:1;5807:3;5803:11;5796:87;5917:66;5912:2;5907:3;5903:12;5896:88;6018:66;6013:2;6008:3;6004:12;5997:88;6113:2;6108:3;6104:12;6097:19;;5702:420;;;;6131:465;;6291:67;6355:2;6350:3;6291:67;;;6284:74;;6391:66;6387:1;6382:3;6378:11;6371:87;6492:66;6487:2;6482:3;6478:12;6471:88;6587:2;6582:3;6578:12;6571:19;;6277:319;;;;6604:120;6687:31;6712:5;6687:31;;;6682:3;6675:44;6669:55;;;6731:114;6810:29;6833:5;6810:29;;;6805:3;6798:42;6792:53;;;6852:213;;6970:2;6959:9;6955:18;6947:26;;6984:71;7052:1;7041:9;7037:17;7028:6;6984:71;;;6941:124;;;;;7072:201;;7184:2;7173:9;7169:18;7161:26;;7198:65;7260:1;7249:9;7245:17;7236:6;7198:65;;;7155:118;;;;;7280:293;;7414:2;7403:9;7399:18;7391:26;;7464:9;7458:4;7454:20;7450:1;7439:9;7435:17;7428:47;7489:74;7558:4;7549:6;7489:74;;;7481:82;;7385:188;;;;;7580:407;;7771:2;7760:9;7756:18;7748:26;;7821:9;7815:4;7811:20;7807:1;7796:9;7792:17;7785:47;7846:131;7972:4;7846:131;;;7838:139;;7742:245;;;;7994:407;;8185:2;8174:9;8170:18;8162:26;;8235:9;8229:4;8225:20;8221:1;8210:9;8206:17;8199:47;8260:131;8386:4;8260:131;;;8252:139;;8156:245;;;;8408:407;;8599:2;8588:9;8584:18;8576:26;;8649:9;8643:4;8639:20;8635:1;8624:9;8620:17;8613:47;8674:131;8800:4;8674:131;;;8666:139;;8570:245;;;;8822:407;;9013:2;9002:9;8998:18;8990:26;;9063:9;9057:4;9053:20;9049:1;9038:9;9034:17;9027:47;9088:131;9214:4;9088:131;;;9080:139;;8984:245;;;;9236:407;;9427:2;9416:9;9412:18;9404:26;;9477:9;9471:4;9467:20;9463:1;9452:9;9448:17;9441:47;9502:131;9628:4;9502:131;;;9494:139;;9398:245;;;;9650:407;;9841:2;9830:9;9826:18;9818:26;;9891:9;9885:4;9881:20;9877:1;9866:9;9862:17;9855:47;9916:131;10042:4;9916:131;;;9908:139;;9812:245;;;;10064:407;;10255:2;10244:9;10240:18;10232:26;;10305:9;10299:4;10295:20;10291:1;10280:9;10276:17;10269:47;10330:131;10456:4;10330:131;;;10322:139;;10226:245;;;;10478:407;;10669:2;10658:9;10654:18;10646:26;;10719:9;10713:4;10709:20;10705:1;10694:9;10690:17;10683:47;10744:131;10870:4;10744:131;;;10736:139;;10640:245;;;;10892:407;;11083:2;11072:9;11068:18;11060:26;;11133:9;11127:4;11123:20;11119:1;11108:9;11104:17;11097:47;11158:131;11284:4;11158:131;;;11150:139;;11054:245;;;;11306:213;;11424:2;11413:9;11409:18;11401:26;;11438:71;11506:1;11495:9;11491:17;11482:6;11438:71;;;11395:124;;;;;11526:205;;11640:2;11629:9;11625:18;11617:26;;11654:67;11718:1;11707:9;11703:17;11694:6;11654:67;;;11611:120;;;;;11738:88;;11815:5;11809:12;11799:22;;11793:33;;;;11834:163;;11949:6;11944:3;11937:19;11986:4;11981:3;11977:14;11962:29;;11930:67;;;;;12005:105;;12074:31;12099:5;12074:31;;;12063:42;;12057:53;;;;12117:92;;12197:5;12190:13;12183:21;12172:32;;12166:43;;;;12216:128;;12296:42;12289:5;12285:54;12274:65;;12268:76;;;;12351:79;;12420:5;12409:16;;12403:27;;;;12437:88;;12515:4;12508:5;12504:16;12493:27;;12487:38;;;;12532:105;;12601:31;12626:5;12601:31;;;12590:42;;12584:53;;;;12644:128;;12724:42;12717:5;12713:54;12702:65;;12696:76;;;;12779:79;;12848:5;12837:16;;12831:27;;;;12866:268;12931:1;12938:101;12952:6;12949:1;12946:13;12938:101;;;13028:1;13023:3;13019:11;13013:18;13009:1;13004:3;13000:11;12993:39;12974:2;12971:1;12967:10;12962:15;;12938:101;;;13054:6;13051:1;13048:13;13045:2;;;13119:1;13110:6;13105:3;13101:16;13094:27;13045:2;12915:219;;;;;13142:97;;13230:2;13226:7;13221:2;13214:5;13210:14;13206:28;13196:38;;13190:49;;;",
  "source": "pragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { ERC20 } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n\n\n/**\n * @title Humanity\n * @dev ERC20 token that can be used to vote on applications to the Humanity registry.\n */\ncontract Humanity is ERC20 {\n\n    string public constant name = \"Rapport\";\n    string public constant symbol = \"RAP\";\n    uint8 public constant decimals = 18;\n    string public version = \"0.0.1\";\n\n    uint public constant INITIAL_SUPPLY = 250000000e18; // 250 million\n    uint public constant FINAL_SUPPLY = 10000000000e18; // 10 billion\n\n    address public registry;\n\n    constructor(address _registry) public {\n        registry = _registry;\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    function mint(address account, uint256 value) public {\n        require(msg.sender == registry, \"Rapport::mint: Only the registry can mint new tokens\");\n        require(totalSupply().add(value) <= FINAL_SUPPLY, \"Rapport::mint: Exceeds final supply\");\n\n        _mint(account, value);\n    }\n\n}\n",
  "sourcePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Rapport.sol",
  "ast": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Rapport.sol",
    "exportedSymbols": {
      "Humanity": [
        1658
      ]
    },
    "id": 1659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1584,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "id": 1585,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1587,
        "nodeType": "ImportDirective",
        "scope": 1659,
        "sourceUnit": 3032,
        "src": "58:78:7",
        "symbolAliases": [
          {
            "foreign": 1586,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1588,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3031,
              "src": "274:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3031",
                "typeString": "contract ERC20"
              }
            },
            "id": 1589,
            "nodeType": "InheritanceSpecifier",
            "src": "274:5:7"
          }
        ],
        "contractDependencies": [
          3031,
          3100
        ],
        "contractKind": "contract",
        "documentation": "@title Humanity\n@dev ERC20 token that can be used to vote on applications to the Humanity registry.",
        "fullyImplemented": true,
        "id": 1658,
        "linearizedBaseContracts": [
          1658,
          3031,
          3100
        ],
        "name": "Humanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1592,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "287:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1590,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "287:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "526170706f7274",
              "id": 1591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "317:9:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_19eecdeac6ce699e44e6740a0a1a311329f451b1f50fe7814858747595410c22",
                "typeString": "literal_string \"Rapport\""
              },
              "value": "Rapport"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1595,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "332:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1593,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "332:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "524150",
              "id": 1594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_70c49c65e2dc4fefe69f26b67c332e4cec2557beadb9f5bd7cd321f6ef6b25af",
                "typeString": "literal_string \"RAP\""
              },
              "value": "RAP"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1598,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "375:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1596,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "375:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1597,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "408:2:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1601,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "416:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1599,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "416:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 1600,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:7:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1604,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "454:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1602,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "454:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030653138",
              "id": 1603,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:12:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000000000"
              },
              "value": "250000000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1607,
            "name": "FINAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "525:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1605,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "525:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030653138",
              "id": 1606,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "561:14:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000000"
              },
              "value": "10000000000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1609,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "596:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1608,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "596:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1624,
              "nodeType": "Block",
              "src": "664:80:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1614,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "674:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1615,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1611,
                      "src": "685:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "674:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1617,
                  "nodeType": "ExpressionStatement",
                  "src": "674:20:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "710:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "710:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "722:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1618,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2945,
                      "src": "704:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "704:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 1625,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "638:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:19:7"
            },
            "returnParameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:7"
            },
            "scope": 1658,
            "src": "626:118:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1656,
              "nodeType": "Block",
              "src": "803:234:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1633,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "821:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "821:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1609,
                          "src": "835:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "821:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526170706f72743a3a6d696e743a204f6e6c79207468652072656769737472792063616e206d696e74206e657720746f6b656e73",
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:54:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eee08b3c00190d9de3407d4e8e482e7d9d0cc50ad9a2080ba3e6bfc0a1412b3",
                          "typeString": "literal_string \"Rapport::mint: Only the registry can mint new tokens\""
                        },
                        "value": "Rapport::mint: Only the registry can mint new tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eee08b3c00190d9de3407d4e8e482e7d9d0cc50ad9a2080ba3e6bfc0a1412b3",
                          "typeString": "literal_string \"Rapport::mint: Only the registry can mint new tokens\""
                        }
                      ],
                      "id": 1632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3118,
                        3119
                      ],
                      "referencedDeclaration": 3119,
                      "src": "813:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:87:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "813:87:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1644,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "936:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1641,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2622,
                                "src": "918:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2571,
                            "src": "918:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1646,
                          "name": "FINAL_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "946:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "918:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526170706f72743a3a6d696e743a20457863656564732066696e616c20737570706c79",
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:37:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca84bb2c8dd26012433c5add26a9303f22f4d55bda21a92214238a739e94cec4",
                          "typeString": "literal_string \"Rapport::mint: Exceeds final supply\""
                        },
                        "value": "Rapport::mint: Exceeds final supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca84bb2c8dd26012433c5add26a9303f22f4d55bda21a92214238a739e94cec4",
                          "typeString": "literal_string \"Rapport::mint: Exceeds final supply\""
                        }
                      ],
                      "id": 1640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3118,
                        3119
                      ],
                      "referencedDeclaration": 3119,
                      "src": "910:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "910:88:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1652,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "1015:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1653,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1024:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1651,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2945,
                      "src": "1009:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:21:7"
                }
              ]
            },
            "documentation": null,
            "id": 1657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "764:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1629,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "781:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "763:32:7"
            },
            "returnParameters": {
              "id": 1631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:7"
            },
            "scope": 1658,
            "src": "750:287:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1659,
        "src": "253:787:7"
      }
    ],
    "src": "0:1041:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Rapport.sol",
    "exportedSymbols": {
      "Humanity": [
        1658
      ]
    },
    "id": 1659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1584,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "id": 1585,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1587,
        "nodeType": "ImportDirective",
        "scope": 1659,
        "sourceUnit": 3032,
        "src": "58:78:7",
        "symbolAliases": [
          {
            "foreign": 1586,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1588,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3031,
              "src": "274:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3031",
                "typeString": "contract ERC20"
              }
            },
            "id": 1589,
            "nodeType": "InheritanceSpecifier",
            "src": "274:5:7"
          }
        ],
        "contractDependencies": [
          3031,
          3100
        ],
        "contractKind": "contract",
        "documentation": "@title Humanity\n@dev ERC20 token that can be used to vote on applications to the Humanity registry.",
        "fullyImplemented": true,
        "id": 1658,
        "linearizedBaseContracts": [
          1658,
          3031,
          3100
        ],
        "name": "Humanity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1592,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "287:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1590,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "287:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "526170706f7274",
              "id": 1591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "317:9:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_19eecdeac6ce699e44e6740a0a1a311329f451b1f50fe7814858747595410c22",
                "typeString": "literal_string \"Rapport\""
              },
              "value": "Rapport"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1595,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "332:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1593,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "332:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "524150",
              "id": 1594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_70c49c65e2dc4fefe69f26b67c332e4cec2557beadb9f5bd7cd321f6ef6b25af",
                "typeString": "literal_string \"RAP\""
              },
              "value": "RAP"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1598,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "375:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1596,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "375:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 1597,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "408:2:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1601,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "416:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1599,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "416:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 1600,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:7:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1604,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "454:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1602,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "454:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030303030653138",
              "id": 1603,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:12:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000000000000000000000000_by_1",
                "typeString": "int_const 250000000000000000000000000"
              },
              "value": "250000000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1607,
            "name": "FINAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "525:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1605,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "525:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030303030303030653138",
              "id": 1606,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "561:14:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000000000"
              },
              "value": "10000000000e18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1609,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 1658,
            "src": "596:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1608,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "596:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1624,
              "nodeType": "Block",
              "src": "664:80:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1614,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "674:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1615,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1611,
                      "src": "685:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "674:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1617,
                  "nodeType": "ExpressionStatement",
                  "src": "674:20:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "710:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "710:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1621,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "722:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1618,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2945,
                      "src": "704:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "704:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 1625,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1625,
                  "src": "638:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:19:7"
            },
            "returnParameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:7"
            },
            "scope": 1658,
            "src": "626:118:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1656,
              "nodeType": "Block",
              "src": "803:234:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1633,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "821:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "821:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1609,
                          "src": "835:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "821:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526170706f72743a3a6d696e743a204f6e6c79207468652072656769737472792063616e206d696e74206e657720746f6b656e73",
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:54:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5eee08b3c00190d9de3407d4e8e482e7d9d0cc50ad9a2080ba3e6bfc0a1412b3",
                          "typeString": "literal_string \"Rapport::mint: Only the registry can mint new tokens\""
                        },
                        "value": "Rapport::mint: Only the registry can mint new tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5eee08b3c00190d9de3407d4e8e482e7d9d0cc50ad9a2080ba3e6bfc0a1412b3",
                          "typeString": "literal_string \"Rapport::mint: Only the registry can mint new tokens\""
                        }
                      ],
                      "id": 1632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3118,
                        3119
                      ],
                      "referencedDeclaration": 3119,
                      "src": "813:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:87:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "813:87:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1644,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "936:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1641,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2622,
                                "src": "918:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2571,
                            "src": "918:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1646,
                          "name": "FINAL_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "946:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "918:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526170706f72743a3a6d696e743a20457863656564732066696e616c20737570706c79",
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:37:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca84bb2c8dd26012433c5add26a9303f22f4d55bda21a92214238a739e94cec4",
                          "typeString": "literal_string \"Rapport::mint: Exceeds final supply\""
                        },
                        "value": "Rapport::mint: Exceeds final supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca84bb2c8dd26012433c5add26a9303f22f4d55bda21a92214238a739e94cec4",
                          "typeString": "literal_string \"Rapport::mint: Exceeds final supply\""
                        }
                      ],
                      "id": 1640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3118,
                        3119
                      ],
                      "referencedDeclaration": 3119,
                      "src": "910:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "910:88:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1652,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "1015:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1653,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1024:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1651,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2945,
                      "src": "1009:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:21:7"
                }
              ]
            },
            "documentation": null,
            "id": 1657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "764:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1629,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "781:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "763:32:7"
            },
            "returnParameters": {
              "id": 1631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:7"
            },
            "scope": 1658,
            "src": "750:287:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1659,
        "src": "253:787:7"
      }
    ],
    "src": "0:1041:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-06-15T13:23:05.272Z",
  "devdoc": {
    "details": "ERC20 token that can be used to vote on applications to the Humanity registry.",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Humanity"
  },
  "userdoc": {
    "methods": {}
  }
}