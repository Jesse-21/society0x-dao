{
  "contractName": "Signal",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxCommunityPool",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxDevelopmentPool",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxRatePercent",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "signalPerDai",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_governance",
          "type": "address"
        },
        {
          "name": "_taxRatePercent",
          "type": "uint8"
        },
        {
          "name": "_taxCommunityPool",
          "type": "address"
        },
        {
          "name": "_taxDevelopmentPool",
          "type": "address"
        },
        {
          "name": "_dai",
          "type": "address"
        },
        {
          "name": "_signalPerDai",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "taxAmount",
          "type": "uint256"
        }
      ],
      "name": "Tax",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "signalValue",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "signalValue",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxCommunityPool",
          "type": "address"
        }
      ],
      "name": "setTaxCommunityPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxDevelopmentPool",
          "type": "address"
        }
      ],
      "name": "setTaxDevelopmentPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"signalValue\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_taxCommunityPool\",\"type\":\"address\"}],\"name\":\"setTaxCommunityPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxCommunityPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxDevelopmentPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"signalValue\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxRatePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signalPerDai\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_taxDevelopmentPool\",\"type\":\"address\"}],\"name\":\"setTaxDevelopmentPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_governance\",\"type\":\"address\"},{\"name\":\"_taxRatePercent\",\"type\":\"uint8\"},{\"name\":\"_taxCommunityPool\",\"type\":\"address\"},{\"name\":\"_taxDevelopmentPool\",\"type\":\"address\"},{\"name\":\"_dai\",\"type\":\"address\"},{\"name\":\"_signalPerDai\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"taxAmount\",\"type\":\"uint256\"}],\"name\":\"Tax\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Signal\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol\":\"Signal\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol\":{\"keccak256\":\"0x40ad0932d820723cbd75496a3b3bb964886504d341ee0c616ee3d5d9e6d1fa6d\",\"urls\":[\"bzzr://c0cd38a64d64abc35a53965f46d4c1b72797236ea63605059aa9789da66a0693\"]},\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol\":{\"keccak256\":\"0xa3a327dd2220ced7bc29626f4fb55c20c8c168641345e5f4523466d33442b91d\",\"urls\":[\"bzzr://7ef5d77fdf9db0888dd39034dfa434ad2dedde4ec453103761fddc94181fa019\"]},\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol\":{\"keccak256\":\"0x77ce00152b9cc7c03ab444476e9280f3b77d5de3cd16f314b43fdc94b5178ae7\",\"urls\":[\"bzzr://0666fb305f8dd64cb5ee03db493c30c685d74f0f444e4a7e2dfc7b996d3f6a65\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4d2395bda94bb5bb6c524ecda59f07fd6a6d754277e9982143c3858e35145189\",\"urls\":[\"bzzr://5d8b1a44381d54d7c5db45eeb163e74a1c8f61152780eb0769442fbd19aeb52b\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "307:3483:10:-;;;346:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;707:494;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:494:10;;;;;;;;;;;;;;;;;;;;;;873:11;886:15;903:17;922:19;943:4;949:13;1941:11:1;1928:10;;:24;;;;;;;;;;;;;;;;;;1979:15;1962:14;;:32;;;;;;;;;;;;;;;;;;2023:17;2004:16;;:36;;;;;;;;;;;;;;;;;;2071:19;2050:18;;:40;;;;;;;;;;;;;;;;;;2106:4;2100:3;;:10;;;;;;;;;;;;;;;;;;2135:13;2120:12;;:28;;;;;;;;;;;;;;;;;;1765:390;;;;;;987:11:10;974:10;;:24;;;;;;;;;;;;;;;;;;1025:15;1008:14;;:32;;;;;;;;;;;;;;;;;;1069:17;1050:16;;:36;;;;;;;;;;;;;;;;;;1117:19;1096:18;;:40;;;;;;;;;;;;;;;;;;1152:4;1146:3;;:10;;;;;;;;;;;;;;;;;;1181:13;1166:12;;:28;;;;;;;;;;;;;;;;;;707:494;;;;;;307:3483;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:152;;227:54;273:6;267:13;227:54;;;218:63;;212:74;;;;;293:118;;369:37;398:6;392:13;369:37;;;360:46;;354:57;;;;;418:968;;;;;;;629:3;617:9;608:7;604:23;600:33;597:2;;;646:1;643;636:12;597:2;681:1;698:64;754:7;745:6;734:9;730:22;698:64;;;688:74;;660:108;799:2;817:62;871:7;862:6;851:9;847:22;817:62;;;807:72;;778:107;916:2;934:64;990:7;981:6;970:9;966:22;934:64;;;924:74;;895:109;1035:2;1053:64;1109:7;1100:6;1089:9;1085:22;1053:64;;;1043:74;;1014:109;1154:3;1173:79;1244:7;1235:6;1224:9;1220:22;1173:79;;;1163:89;;1133:125;1289:3;1308:62;1362:7;1353:6;1342:9;1338:22;1308:62;;;1298:72;;1268:108;591:795;;;;;;;;;1393:105;;1462:31;1487:5;1462:31;;;1451:42;;1445:53;;;;1505:120;;1589:31;1614:5;1589:31;;;1578:42;;1572:53;;;;1632:128;;1712:42;1705:5;1701:54;1690:65;;1684:76;;;;1767:88;;1845:4;1838:5;1834:16;1823:27;;1817:38;;;;307:3483:10;;;;;;;",
  "deployedSourceMap": "307:3483:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:3483:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:38;;;:::i;:::-;;;;;;;;;;;;;;;;3221:145:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2215:89;;;:::i;:::-;;;;;;;;;;;;;;;;3823:315;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2351:914:10;;;;;;;;;;;;;;;;:::i;:::-;;470:35;;;:::i;:::-;;;;;;;;;;;;;;;;4533:203:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3271:253:10;;;;;;;;;;;;;;;;:::i;:::-;;346:31;;;:::i;:::-;;;;;;;;;;;;;;;;599:25;;;:::i;:::-;;;;;;;;;;;;;;;;630:31;;;:::i;:::-;;;;;;;;;;;;;;;;2362:108:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;667:33:10;;;:::i;:::-;;;;;;;;;;;;;;;;427:36;;;:::i;:::-;;;;;;;;;;;;;;;;1207:1138;;;;;;;;;;;;;;;;:::i;:::-;;5223:213:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2673:220;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;511:27:10;;;:::i;:::-;;;;;;;;;;;;;;;;2951:132:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;544:25:10;;;:::i;:::-;;;;;;;;;;;;;;;;3530:257;;;;;;;;;;;;;;;;:::i;:::-;;576:17;;;:::i;:::-;;;;;;;;;;;;;;;;383:38;;;;;;;;;;;;;;;;;;;:::o;3221:145:1:-;3286:4;3302:36;3311:10;3323:7;3332:5;3302:8;:36::i;:::-;3355:4;3348:11;;3221:145;;;;:::o;2215:89::-;2259:7;2285:12;;2278:19;;2215:89;:::o;3823:315::-;3912:4;3928:22;3953:20;3958:6;3966;3953:4;:20::i;:::-;3928:45;;3983:44;3993:6;4001:9;4012:14;3983:9;:44::i;:::-;4037:73;4046:6;4054:10;4066:43;4102:6;4066:11;:19;4078:6;4066:19;;;;;;;;;;;;;;;:31;4086:10;4066:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;4037:8;:73::i;:::-;4127:4;4120:11;;;3823:315;;;;;:::o;2351:914:10:-;2454:1;2428:22;2444:5;2428:11;:15;;:22;;;;:::i;:::-;:27;2407:212;;;;;;;;;;;;;;;;;;;;;;2664:42;2650:56;;:10;:56;;;;2629:161;;;;;;;;;;;;;;;;;;;;;;2863:1;2821:38;2847:11;2821:21;2831:10;2821:9;:21::i;:::-;:25;;:38;;;;:::i;:::-;:43;;2800:184;;;;;;;;;;;;;;;;;;;;;;3047:29;3063:12;;;;;;;;;;;3047:29;;:11;:15;;:29;;;;:::i;:::-;3015:3;;;;;;;;;;;:13;;;3037:4;3015:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3015:28:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3015:28:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3015:28:10;;;;;;;;;:61;;2994:189;;;;;;;;;;;;;;;;;;;;;;3193:65;3203:10;3215:29;3231:12;;;;;;;;;;;3215:29;;:11;:15;;:29;;;;:::i;:::-;3246:11;3193:9;:65::i;:::-;2351:914;:::o;470:35::-;503:2;470:35;:::o;4533:203:1:-;4613:4;4629:79;4638:10;4650:7;4659:48;4696:10;4659:11;:23;4671:10;4659:23;;;;;;;;;;;;;;;:32;4683:7;4659:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;4629:8;:79::i;:::-;4725:4;4718:11;;4533:203;;;;:::o;3271:253:10:-;3366:10;;;;;;;;;;;3352:24;;:10;:24;;;3344:127;;;;;;;;;;;;;;;;;;;;;;3500:17;3481:16;;:36;;;;;;;;;;;;;;;;;;3271:253;:::o;346:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;599:25::-;;;;;;;;;;;;;:::o;630:31::-;;;;;;;;;;;;;:::o;2362:108:1:-;2419:7;2445:9;:18;2455:7;2445:18;;;;;;;;;;;;;;;;2438:25;;2362:108;;;:::o;667:33:10:-;;;;;;;;;;;;;:::o;427:36::-;;;;;;;;;;;;;;;;;;;:::o;1207:1138::-;1306:1;1280:22;1296:5;1280:11;:15;;:22;;;;:::i;:::-;:27;1259:212;;;;;;;;;;;;;;;;;;;;;;1535:1;1502:30;1520:11;1502:13;:11;:13::i;:::-;:17;;:30;;;;:::i;:::-;:34;1481:141;;;;;;;;;;;;;;;;;;;;;;1697:29;1713:12;;;;;;;;;;;1697:29;;:11;:15;;:29;;;;:::i;:::-;1653:3;;;;;;;;;;;:13;;;1667:10;1687:4;1653:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:40:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1653:40:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1653:40:10;;;;;;;;;:73;;1632:204;;;;;;;;;;;;;;;;;;;;;;1867:3;;;;;;;;;;;:16;;;1884:10;1904:4;1911:29;1927:12;;;;;;;;;;;1911:29;;:11;:15;;:29;;;;:::i;:::-;1867:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1867:74:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1867:74:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1867:74:10;;;;;;;;;1846:230;;;;;;;;;;;;;;;;;;;;;;2158:11;2107:47;2141:12;;;;;;;;;;;2107:47;;:29;2123:12;;;;;;;;;;;2107:29;;:11;:15;;:29;;;;:::i;:::-;:33;;:47;;;;:::i;:::-;:62;2086:212;;;;;;;;;;;;;;;;;;;;;;2308:30;2314:10;2326:11;2308:5;:30::i;:::-;1207:1138;:::o;5223:213:1:-;5308:4;5324:84;5333:10;5345:7;5354:53;5391:15;5354:11;:23;5366:10;5354:23;;;;;;;;;;;;;;;:32;5378:7;5354:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;5324:8;:84::i;:::-;5425:4;5418:11;;5223:213;;;;:::o;2673:220::-;2742:4;2758:22;2783:24;2788:10;2800:6;2783:4;:24::i;:::-;2758:49;;2817:48;2827:10;2839:9;2850:14;2817:9;:48::i;:::-;2882:4;2875:11;;;2673:220;;;;:::o;511:27:10:-;;;;;;;;;;;;;:::o;2951:132:1:-;3023:7;3049:11;:18;3061:5;3049:18;;;;;;;;;;;;;;;:27;3068:7;3049:27;;;;;;;;;;;;;;;;3042:34;;2951:132;;;;:::o;544:25:10:-;;;;;;;;;;;;;:::o;3530:257::-;3629:10;;;;;;;;;;;3615:24;;:10;:24;;;3607:123;;;;;;;;;;;;;;;;;;;;;;3761:19;3740:18;;:40;;;;;;;;;;;;;;;;;;3530:257;:::o;576:17::-;;;;;;;;;;;;;:::o;11752:329:1:-;11861:1;11844:19;;:5;:19;;;;11836:68;;;;;;;;;;;;;;;;;;;;;;11941:1;11922:21;;:7;:21;;;;11914:68;;;;;;;;;;;;;;;;;;;;;;12023:5;11993:11;:18;12005:5;11993:18;;;;;;;;;;;;;;;:27;12012:7;11993:27;;;;;;;;;;;;;;;:35;;;;12059:7;12043:31;;12052:5;12043:31;;;12068:5;12043:31;;;;;;;;;;;;;;;11752:329;;;:::o;6859:1378::-;6922:7;7016:1;6995:17;7006:5;6995:6;:10;;:17;;;;:::i;:::-;:22;6974:189;;;;;;;;;;;;;;;;;;;;;;7173:24;7200:35;7231:3;7200:26;7211:14;;;;;;;;;;;7200:26;;:6;:10;;:26;;;;:::i;:::-;:30;;:35;;;;:::i;:::-;7173:62;;7304:1;7285:16;:20;7277:46;;;;;;;;;;;;;;;;;;;;;;7333:22;7358:23;7379:1;7358:16;:20;;:23;;;;:::i;:::-;7333:48;;7457:22;7482:26;7493:14;7482:6;:10;;:26;;;;:::i;:::-;7457:51;;7571:1;7554:14;:18;7546:58;;;;;;;;;;;;;;;;;;;;;;7682:6;7635:43;7663:14;;;;;;;;;;;7635:43;;:23;7654:3;7635:14;:18;;:23;;;;:::i;:::-;:27;;:43;;;;:::i;:::-;:53;7614:165;;;;;;;;;;;;;;;;;;;;;;7834:6;7815:14;7798;:31;7797:43;7789:113;;;;;;;;;;;;;;;;;;;;;;7912:53;7922:6;7930:16;;;;;;;;;;;7948;7912:9;:53::i;:::-;8022:55;8032:6;8040:18;;;;;;;;;;;8060:16;8022:9;:55::i;:::-;8145:6;8141:27;;;8153:14;8141:27;;;;;;;;;;;;;;;8185:14;8178:21;;;;;6859:1378;;;;:::o;5910:422::-;6025:1;6007:20;;:6;:20;;;;5999:70;;;;;;;;;;;;;;;;;;;;;;6108:1;6087:23;;:9;:23;;;;6079:71;;;;;;;;;;;;;;;;;;;;;;6181:29;6203:6;6181:9;:17;6191:6;6181:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6161:9;:17;6171:6;6161:17;;;;;;;;;;;;;;;:49;;;;6243:32;6268:6;6243:9;:20;6253:9;6243:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6220:9;:20;6230:9;6220:20;;;;;;;;;;;;;;;:55;;;;6307:9;6290:35;;6299:6;6290:35;;;6318:6;6290:35;;;;;;;;;;;;;;;5910:422;;;:::o;1279:181:26:-;1337:7;1369:1;1364;:6;;1356:51;;;;;;;;;;;;;;;;;;;;;;1417:9;1433:1;1429;:5;1417:17;;1452:1;1445:8;;;1279:181;;;;:::o;1873:160::-;1931:7;1963:1;1958;:6;;1950:54;;;;;;;;;;;;;;;;;;;;;;2025:1;2021;:5;;;;;;2014:12;;1873:160;;;;:::o;813:335::-;871:7;968:1;964;:5;956:53;;;;;;;;;;;;;;;;;;;;;;1019:9;1035:1;1031;:5;;;;;;1019:17;;1140:1;1133:8;;;813:335;;;;:::o;9256:610:1:-;9371:3;;;;;;;;;;;:12;;;9384:7;9393:24;9408:8;9393:14;:24::i;:::-;9371:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9371:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9371:47:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9371:47:1;;;;;;;;;9350:133;;;;;;;;;;;;;;;;;;;;;;9514:36;9531:4;9538:11;9514:8;:36::i;:::-;9493:125;;;;;;;;;;;;;;;;;;;;;;9628:49;9642:4;9649:27;9664:11;9649:14;:27::i;:::-;9628:5;:49::i;:::-;9758:13;:11;:13::i;:::-;9708:46;9741:12;;;;;;;;;;;9708:46;;:3;;;;;;;;;;;:13;;;9730:4;9708:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9708:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9708:28:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9708:28:1;;;;;;;;;:32;;:46;;;;:::i;:::-;:63;;9687:172;;;;;;;;;;;;;;;;;;;;;;9256:610;;;:::o;1541:180:26:-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:50;;;;;;;;;;;;;;;;;;;;;;1713:1;1706:8;;;1541:180;;;;:::o;229:456::-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:54;;;;;;;;;;;;;;;;;;;;;;677:1;670:8;;;229:456;;;;;:::o;8507:502:1:-;8616:1;8595:17;8606:5;8595:6;:10;;:17;;;;:::i;:::-;:22;8574:190;;;;;;;;;;;;;;;;;;;;;;8801:1;8782:21;;:7;:21;;;;8774:65;;;;;;;;;;;;;;;;;;;;;;8865:24;8882:6;8865:12;;:16;;:24;;;;:::i;:::-;8850:12;:39;;;;8920:30;8943:6;8920:9;:18;8930:7;8920:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;:51;;;;8986:7;8965:37;;8982:1;8965:37;;;8995:6;8965:37;;;;;;;;;;;;;;;8507:502;;:::o;9939:578::-;9995:7;10014:21;10038:34;10068:3;10038:25;10048:14;;;;;;;;;;;10038:25;;:5;:9;;:25;;;;:::i;:::-;:29;;:34;;;;:::i;:::-;10014:58;;10123:1;10103:16;10113:5;10103;:9;;:16;;;;:::i;:::-;:21;10082:197;;;;;;;;;;;;;;;;;;;;;;10313:1;10297:13;:17;10289:94;;;;;;;;;;;;;;;;;;;;;;10393:22;10418:24;10428:13;10418:5;:9;;:24;;;;:::i;:::-;10393:49;;10496:14;10489:21;;;;9939:578;;;:::o;10836:491::-;10943:1;10923:16;10933:5;10923;:9;;:16;;;;:::i;:::-;:21;10902:181;;;;;;;;;;;;;;;;;;;;;;11120:1;11101:21;;:7;:21;;;;11093:67;;;;;;;;;;;;;;;;;;;;;;11186:23;11203:5;11186:12;;:16;;:23;;;;:::i;:::-;11171:12;:38;;;;11240:29;11263:5;11240:9;:18;11250:7;11240:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;11219:9;:18;11229:7;11219:18;;;;;;;;;;;;;;;:50;;;;11310:1;11284:36;;11293:7;11284:36;;;11314:5;11284:36;;;;;;;;;;;;;;;10836:491;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:116;;205:36;233:6;227:13;205:36;;;196:45;;190:56;;;;;253:118;;320:46;358:6;345:20;320:46;;;311:55;;305:66;;;;;378:122;;456:39;487:6;481:13;456:39;;;447:48;;441:59;;;;;507:241;;611:2;599:9;590:7;586:23;582:32;579:2;;;627:1;624;617:12;579:2;662:1;679:53;724:7;715:6;704:9;700:22;679:53;;;669:63;;641:97;573:175;;;;;755:366;;;876:2;864:9;855:7;851:23;847:32;844:2;;;892:1;889;882:12;844:2;927:1;944:53;989:7;980:6;969:9;965:22;944:53;;;934:63;;906:97;1034:2;1052:53;1097:7;1088:6;1077:9;1073:22;1052:53;;;1042:63;;1013:98;838:283;;;;;;1128:491;;;;1266:2;1254:9;1245:7;1241:23;1237:32;1234:2;;;1282:1;1279;1272:12;1234:2;1317:1;1334:53;1379:7;1370:6;1359:9;1355:22;1334:53;;;1324:63;;1296:97;1424:2;1442:53;1487:7;1478:6;1467:9;1463:22;1442:53;;;1432:63;;1403:98;1532:2;1550:53;1595:7;1586:6;1575:9;1571:22;1550:53;;;1540:63;;1511:98;1228:391;;;;;;1626:366;;;1747:2;1735:9;1726:7;1722:23;1718:32;1715:2;;;1763:1;1760;1753:12;1715:2;1798:1;1815:53;1860:7;1851:6;1840:9;1836:22;1815:53;;;1805:63;;1777:97;1905:2;1923:53;1968:7;1959:6;1948:9;1944:22;1923:53;;;1913:63;;1884:98;1709:283;;;;;;1999:257;;2111:2;2099:9;2090:7;2086:23;2082:32;2079:2;;;2127:1;2124;2117:12;2079:2;2162:1;2179:61;2232:7;2223:6;2212:9;2208:22;2179:61;;;2169:71;;2141:105;2073:183;;;;;2263:241;;2367:2;2355:9;2346:7;2342:23;2338:32;2335:2;;;2383:1;2380;2373:12;2335:2;2418:1;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;;;2425:63;;2397:97;2329:175;;;;;2511:263;;2626:2;2614:9;2605:7;2601:23;2597:32;2594:2;;;2642:1;2639;2632:12;2594:2;2677:1;2694:64;2750:7;2741:6;2730:9;2726:22;2694:64;;;2684:74;;2656:108;2588:186;;;;;2781:142;2872:45;2911:5;2872:45;;;2867:3;2860:58;2854:69;;;2930:120;3013:31;3038:5;3013:31;;;3008:3;3001:44;2995:55;;;3057:111;3134:28;3156:5;3134:28;;;3129:3;3122:41;3116:52;;;3175:156;3273:52;3319:5;3273:52;;;3268:3;3261:65;3255:76;;;3338:339;;3446:35;3475:5;3446:35;;;3493:71;3557:6;3552:3;3493:71;;;3486:78;;3569:52;3614:6;3609:3;3602:4;3595:5;3591:16;3569:52;;;3642:29;3664:6;3642:29;;;3637:3;3633:39;3626:46;;3426:251;;;;;;3685:465;;3845:67;3909:2;3904:3;3845:67;;;3838:74;;3945:66;3941:1;3936:3;3932:11;3925:87;4046:66;4041:2;4036:3;4032:12;4025:88;4141:2;4136:3;4132:12;4125:19;;3831:319;;;;4159:364;;4319:67;4383:2;4378:3;4319:67;;;4312:74;;4419:66;4415:1;4410:3;4406:11;4399:87;4514:2;4509:3;4505:12;4498:19;;4305:218;;;;4532:465;;4692:67;4756:2;4751:3;4692:67;;;4685:74;;4792:66;4788:1;4783:3;4779:11;4772:87;4893:66;4888:2;4883:3;4879:12;4872:88;4988:2;4983:3;4979:12;4972:19;;4678:319;;;;5006:566;;5166:67;5230:2;5225:3;5166:67;;;5159:74;;5266:66;5262:1;5257:3;5253:11;5246:87;5367:66;5362:2;5357:3;5353:12;5346:88;5468:66;5463:2;5458:3;5454:12;5447:88;5563:2;5558:3;5554:12;5547:19;;5152:420;;;;5581:771;;5741:68;5805:3;5800;5741:68;;;5734:75;;5842:66;5838:1;5833:3;5829:11;5822:87;5943:66;5938:2;5933:3;5929:12;5922:88;6044:66;6039:2;6034:3;6030:12;6023:88;6145:66;6140:2;6135:3;6131:12;6124:88;6247:66;6241:3;6236;6232:13;6225:89;6342:3;6337;6333:13;6326:20;;5727:625;;;;6361:465;;6521:67;6585:2;6580:3;6521:67;;;6514:74;;6621:66;6617:1;6612:3;6608:11;6601:87;6722:66;6717:2;6712:3;6708:12;6701:88;6817:2;6812:3;6808:12;6801:19;;6507:319;;;;6835:566;;6995:67;7059:2;7054:3;6995:67;;;6988:74;;7095:66;7091:1;7086:3;7082:11;7075:87;7196:66;7191:2;7186:3;7182:12;7175:88;7297:66;7292:2;7287:3;7283:12;7276:88;7392:2;7387:3;7383:12;7376:19;;6981:420;;;;7410:465;;7570:67;7634:2;7629:3;7570:67;;;7563:74;;7670:66;7666:1;7661:3;7657:11;7650:87;7771:66;7766:2;7761:3;7757:12;7750:88;7866:2;7861:3;7857:12;7850:19;;7556:319;;;;7884:364;;8044:67;8108:2;8103:3;8044:67;;;8037:74;;8144:66;8140:1;8135:3;8131:11;8124:87;8239:2;8234:3;8230:12;8223:19;;8030:218;;;;8257:566;;8417:67;8481:2;8476:3;8417:67;;;8410:74;;8517:66;8513:1;8508:3;8504:11;8497:87;8618:66;8613:2;8608:3;8604:12;8597:88;8719:66;8714:2;8709:3;8705:12;8698:88;8814:2;8809:3;8805:12;8798:19;;8403:420;;;;8832:364;;8992:67;9056:2;9051:3;8992:67;;;8985:74;;9092:66;9088:1;9083:3;9079:11;9072:87;9187:2;9182:3;9178:12;9171:19;;8978:218;;;;9205:771;;9365:68;9429:3;9424;9365:68;;;9358:75;;9466:66;9462:1;9457:3;9453:11;9446:87;9567:66;9562:2;9557:3;9553:12;9546:88;9668:66;9663:2;9658:3;9654:12;9647:88;9769:66;9764:2;9759:3;9755:12;9748:88;9871:66;9865:3;9860;9856:13;9849:89;9966:3;9961;9957:13;9950:20;;9351:625;;;;9985:669;;10145:68;10209:3;10204;10145:68;;;10138:75;;10246:66;10242:1;10237:3;10233:11;10226:87;10347:66;10342:2;10337:3;10333:12;10326:88;10448:66;10443:2;10438:3;10434:12;10427:88;10549:66;10544:2;10539:3;10535:12;10528:88;10644:3;10639;10635:13;10628:20;;10131:523;;;;10663:669;;10823:68;10887:3;10882;10823:68;;;10816:75;;10924:66;10920:1;10915:3;10911:11;10904:87;11025:66;11020:2;11015:3;11011:12;11004:88;11126:66;11121:2;11116:3;11112:12;11105:88;11227:66;11222:2;11217:3;11213:12;11206:88;11322:3;11317;11313:13;11306:20;;10809:523;;;;11341:465;;11501:67;11565:2;11560:3;11501:67;;;11494:74;;11601:66;11597:1;11592:3;11588:11;11581:87;11702:66;11697:2;11692:3;11688:12;11681:88;11797:2;11792:3;11788:12;11781:19;;11487:319;;;;11815:771;;11975:68;12039:3;12034;11975:68;;;11968:75;;12076:66;12072:1;12067:3;12063:11;12056:87;12177:66;12172:2;12167:3;12163:12;12156:88;12278:66;12273:2;12268:3;12264:12;12257:88;12379:66;12374:2;12369:3;12365:12;12358:88;12481:66;12475:3;12470;12466:13;12459:89;12576:3;12571;12567:13;12560:20;;11961:625;;;;12595:566;;12755:67;12819:2;12814:3;12755:67;;;12748:74;;12855:66;12851:1;12846:3;12842:11;12835:87;12956:66;12951:2;12946:3;12942:12;12935:88;13057:66;13052:2;13047:3;13043:12;13036:88;13152:2;13147:3;13143:12;13136:19;;12741:420;;;;13170:465;;13330:67;13394:2;13389:3;13330:67;;;13323:74;;13430:66;13426:1;13421:3;13417:11;13410:87;13531:66;13526:2;13521:3;13517:12;13510:88;13626:2;13621:3;13617:12;13610:19;;13316:319;;;;13644:566;;13804:67;13868:2;13863:3;13804:67;;;13797:74;;13904:66;13900:1;13895:3;13891:11;13884:87;14005:66;14000:2;13995:3;13991:12;13984:88;14106:66;14101:2;14096:3;14092:12;14085:88;14201:2;14196:3;14192:12;14185:19;;13790:420;;;;14219:465;;14379:67;14443:2;14438:3;14379:67;;;14372:74;;14479:66;14475:1;14470:3;14466:11;14459:87;14580:66;14575:2;14570:3;14566:12;14559:88;14675:2;14670:3;14666:12;14659:19;;14365:319;;;;14693:465;;14853:67;14917:2;14912:3;14853:67;;;14846:74;;14953:66;14949:1;14944:3;14940:11;14933:87;15054:66;15049:2;15044:3;15040:12;15033:88;15149:2;15144:3;15140:12;15133:19;;14839:319;;;;15167:669;;15327:68;15391:3;15386;15327:68;;;15320:75;;15428:66;15424:1;15419:3;15415:11;15408:87;15529:66;15524:2;15519:3;15515:12;15508:88;15630:66;15625:2;15620:3;15616:12;15609:88;15731:66;15726:2;15721:3;15717:12;15710:88;15826:3;15821;15817:13;15810:20;;15313:523;;;;15845:364;;16005:67;16069:2;16064:3;16005:67;;;15998:74;;16105:66;16101:1;16096:3;16092:11;16085:87;16200:2;16195:3;16191:12;16184:19;;15991:218;;;;16218:465;;16378:67;16442:2;16437:3;16378:67;;;16371:74;;16478:66;16474:1;16469:3;16465:11;16458:87;16579:66;16574:2;16569:3;16565:12;16558:88;16674:2;16669:3;16665:12;16658:19;;16364:319;;;;16692:465;;16852:67;16916:2;16911:3;16852:67;;;16845:74;;16952:66;16948:1;16943:3;16939:11;16932:87;17053:66;17048:2;17043:3;17039:12;17032:88;17148:2;17143:3;17139:12;17132:19;;16838:319;;;;17166:566;;17326:67;17390:2;17385:3;17326:67;;;17319:74;;17426:66;17422:1;17417:3;17413:11;17406:87;17527:66;17522:2;17517:3;17513:12;17506:88;17628:66;17623:2;17618:3;17614:12;17607:88;17723:2;17718:3;17714:12;17707:19;;17312:420;;;;17741:669;;17901:68;17965:3;17960;17901:68;;;17894:75;;18002:66;17998:1;17993:3;17989:11;17982:87;18103:66;18098:2;18093:3;18089:12;18082:88;18204:66;18199:2;18194:3;18190:12;18183:88;18305:66;18300:2;18295:3;18291:12;18284:88;18400:3;18395;18391:13;18384:20;;17887:523;;;;18419:669;;18579:68;18643:3;18638;18579:68;;;18572:75;;18680:66;18676:1;18671:3;18667:11;18660:87;18781:66;18776:2;18771:3;18767:12;18760:88;18882:66;18877:2;18872:3;18868:12;18861:88;18983:66;18978:2;18973:3;18969:12;18962:88;19078:3;19073;19069:13;19062:20;;18565:523;;;;19097:465;;19257:67;19321:2;19316:3;19257:67;;;19250:74;;19357:66;19353:1;19348:3;19344:11;19337:87;19458:66;19453:2;19448:3;19444:12;19437:88;19553:2;19548:3;19544:12;19537:19;;19243:319;;;;19571:465;;19731:67;19795:2;19790:3;19731:67;;;19724:74;;19831:66;19827:1;19822:3;19818:11;19811:87;19932:66;19927:2;19922:3;19918:12;19911:88;20027:2;20022:3;20018:12;20011:19;;19717:319;;;;20045:465;;20205:67;20269:2;20264:3;20205:67;;;20198:74;;20305:66;20301:1;20296:3;20292:11;20285:87;20406:66;20401:2;20396:3;20392:12;20385:88;20501:2;20496:3;20492:12;20485:19;;20191:319;;;;20519:364;;20679:67;20743:2;20738:3;20679:67;;;20672:74;;20779:66;20775:1;20770:3;20766:11;20759:87;20874:2;20869:3;20865:12;20858:19;;20665:218;;;;20892:364;;21052:67;21116:2;21111:3;21052:67;;;21045:74;;21152:66;21148:1;21143:3;21139:11;21132:87;21247:2;21242:3;21238:12;21231:19;;21038:218;;;;21265:465;;21425:67;21489:2;21484:3;21425:67;;;21418:74;;21525:66;21521:1;21516:3;21512:11;21505:87;21626:66;21621:2;21616:3;21612:12;21605:88;21721:2;21716:3;21712:12;21705:19;;21411:319;;;;21738:120;21821:31;21846:5;21821:31;;;21816:3;21809:44;21803:55;;;21865:114;21944:29;21967:5;21944:29;;;21939:3;21932:42;21926:53;;;21986:213;;22104:2;22093:9;22089:18;22081:26;;22118:71;22186:1;22175:9;22171:17;22162:6;22118:71;;;22075:124;;;;;22206:340;;22360:2;22349:9;22345:18;22337:26;;22374:79;22450:1;22439:9;22435:17;22426:6;22374:79;;;22464:72;22532:2;22521:9;22517:18;22508:6;22464:72;;;22331:215;;;;;;22553:451;;22735:2;22724:9;22720:18;22712:26;;22749:79;22825:1;22814:9;22810:17;22801:6;22749:79;;;22839:72;22907:2;22896:9;22892:18;22883:6;22839:72;;;22922;22990:2;22979:9;22975:18;22966:6;22922:72;;;22706:298;;;;;;;23011:324;;23157:2;23146:9;23142:18;23134:26;;23171:71;23239:1;23228:9;23224:17;23215:6;23171:71;;;23253:72;23321:2;23310:9;23306:18;23297:6;23253:72;;;23128:207;;;;;;23342:201;;23454:2;23443:9;23439:18;23431:26;;23468:65;23530:1;23519:9;23515:17;23506:6;23468:65;;;23425:118;;;;;23550:243;;23683:2;23672:9;23668:18;23660:26;;23697:86;23780:1;23769:9;23765:17;23756:6;23697:86;;;23654:139;;;;;23800:293;;23934:2;23923:9;23919:18;23911:26;;23984:9;23978:4;23974:20;23970:1;23959:9;23955:17;23948:47;24009:74;24078:4;24069:6;24009:74;;;24001:82;;23905:188;;;;;24100:407;;24291:2;24280:9;24276:18;24268:26;;24341:9;24335:4;24331:20;24327:1;24316:9;24312:17;24305:47;24366:131;24492:4;24366:131;;;24358:139;;24262:245;;;;24514:407;;24705:2;24694:9;24690:18;24682:26;;24755:9;24749:4;24745:20;24741:1;24730:9;24726:17;24719:47;24780:131;24906:4;24780:131;;;24772:139;;24676:245;;;;24928:407;;25119:2;25108:9;25104:18;25096:26;;25169:9;25163:4;25159:20;25155:1;25144:9;25140:17;25133:47;25194:131;25320:4;25194:131;;;25186:139;;25090:245;;;;25342:407;;25533:2;25522:9;25518:18;25510:26;;25583:9;25577:4;25573:20;25569:1;25558:9;25554:17;25547:47;25608:131;25734:4;25608:131;;;25600:139;;25504:245;;;;25756:407;;25947:2;25936:9;25932:18;25924:26;;25997:9;25991:4;25987:20;25983:1;25972:9;25968:17;25961:47;26022:131;26148:4;26022:131;;;26014:139;;25918:245;;;;26170:407;;26361:2;26350:9;26346:18;26338:26;;26411:9;26405:4;26401:20;26397:1;26386:9;26382:17;26375:47;26436:131;26562:4;26436:131;;;26428:139;;26332:245;;;;26584:407;;26775:2;26764:9;26760:18;26752:26;;26825:9;26819:4;26815:20;26811:1;26800:9;26796:17;26789:47;26850:131;26976:4;26850:131;;;26842:139;;26746:245;;;;26998:407;;27189:2;27178:9;27174:18;27166:26;;27239:9;27233:4;27229:20;27225:1;27214:9;27210:17;27203:47;27264:131;27390:4;27264:131;;;27256:139;;27160:245;;;;27412:407;;27603:2;27592:9;27588:18;27580:26;;27653:9;27647:4;27643:20;27639:1;27628:9;27624:17;27617:47;27678:131;27804:4;27678:131;;;27670:139;;27574:245;;;;27826:407;;28017:2;28006:9;28002:18;27994:26;;28067:9;28061:4;28057:20;28053:1;28042:9;28038:17;28031:47;28092:131;28218:4;28092:131;;;28084:139;;27988:245;;;;28240:407;;28431:2;28420:9;28416:18;28408:26;;28481:9;28475:4;28471:20;28467:1;28456:9;28452:17;28445:47;28506:131;28632:4;28506:131;;;28498:139;;28402:245;;;;28654:407;;28845:2;28834:9;28830:18;28822:26;;28895:9;28889:4;28885:20;28881:1;28870:9;28866:17;28859:47;28920:131;29046:4;28920:131;;;28912:139;;28816:245;;;;29068:407;;29259:2;29248:9;29244:18;29236:26;;29309:9;29303:4;29299:20;29295:1;29284:9;29280:17;29273:47;29334:131;29460:4;29334:131;;;29326:139;;29230:245;;;;29482:407;;29673:2;29662:9;29658:18;29650:26;;29723:9;29717:4;29713:20;29709:1;29698:9;29694:17;29687:47;29748:131;29874:4;29748:131;;;29740:139;;29644:245;;;;29896:407;;30087:2;30076:9;30072:18;30064:26;;30137:9;30131:4;30127:20;30123:1;30112:9;30108:17;30101:47;30162:131;30288:4;30162:131;;;30154:139;;30058:245;;;;30310:407;;30501:2;30490:9;30486:18;30478:26;;30551:9;30545:4;30541:20;30537:1;30526:9;30522:17;30515:47;30576:131;30702:4;30576:131;;;30568:139;;30472:245;;;;30724:407;;30915:2;30904:9;30900:18;30892:26;;30965:9;30959:4;30955:20;30951:1;30940:9;30936:17;30929:47;30990:131;31116:4;30990:131;;;30982:139;;30886:245;;;;31138:407;;31329:2;31318:9;31314:18;31306:26;;31379:9;31373:4;31369:20;31365:1;31354:9;31350:17;31343:47;31404:131;31530:4;31404:131;;;31396:139;;31300:245;;;;31552:407;;31743:2;31732:9;31728:18;31720:26;;31793:9;31787:4;31783:20;31779:1;31768:9;31764:17;31757:47;31818:131;31944:4;31818:131;;;31810:139;;31714:245;;;;31966:407;;32157:2;32146:9;32142:18;32134:26;;32207:9;32201:4;32197:20;32193:1;32182:9;32178:17;32171:47;32232:131;32358:4;32232:131;;;32224:139;;32128:245;;;;32380:407;;32571:2;32560:9;32556:18;32548:26;;32621:9;32615:4;32611:20;32607:1;32596:9;32592:17;32585:47;32646:131;32772:4;32646:131;;;32638:139;;32542:245;;;;32794:407;;32985:2;32974:9;32970:18;32962:26;;33035:9;33029:4;33025:20;33021:1;33010:9;33006:17;32999:47;33060:131;33186:4;33060:131;;;33052:139;;32956:245;;;;33208:407;;33399:2;33388:9;33384:18;33376:26;;33449:9;33443:4;33439:20;33435:1;33424:9;33420:17;33413:47;33474:131;33600:4;33474:131;;;33466:139;;33370:245;;;;33622:407;;33813:2;33802:9;33798:18;33790:26;;33863:9;33857:4;33853:20;33849:1;33838:9;33834:17;33827:47;33888:131;34014:4;33888:131;;;33880:139;;33784:245;;;;34036:407;;34227:2;34216:9;34212:18;34204:26;;34277:9;34271:4;34267:20;34263:1;34252:9;34248:17;34241:47;34302:131;34428:4;34302:131;;;34294:139;;34198:245;;;;34450:407;;34641:2;34630:9;34626:18;34618:26;;34691:9;34685:4;34681:20;34677:1;34666:9;34662:17;34655:47;34716:131;34842:4;34716:131;;;34708:139;;34612:245;;;;34864:407;;35055:2;35044:9;35040:18;35032:26;;35105:9;35099:4;35095:20;35091:1;35080:9;35076:17;35069:47;35130:131;35256:4;35130:131;;;35122:139;;35026:245;;;;35278:407;;35469:2;35458:9;35454:18;35446:26;;35519:9;35513:4;35509:20;35505:1;35494:9;35490:17;35483:47;35544:131;35670:4;35544:131;;;35536:139;;35440:245;;;;35692:407;;35883:2;35872:9;35868:18;35860:26;;35933:9;35927:4;35923:20;35919:1;35908:9;35904:17;35897:47;35958:131;36084:4;35958:131;;;35950:139;;35854:245;;;;36106:407;;36297:2;36286:9;36282:18;36274:26;;36347:9;36341:4;36337:20;36333:1;36322:9;36318:17;36311:47;36372:131;36498:4;36372:131;;;36364:139;;36268:245;;;;36520:407;;36711:2;36700:9;36696:18;36688:26;;36761:9;36755:4;36751:20;36747:1;36736:9;36732:17;36725:47;36786:131;36912:4;36786:131;;;36778:139;;36682:245;;;;36934:407;;37125:2;37114:9;37110:18;37102:26;;37175:9;37169:4;37165:20;37161:1;37150:9;37146:17;37139:47;37200:131;37326:4;37200:131;;;37192:139;;37096:245;;;;37348:407;;37539:2;37528:9;37524:18;37516:26;;37589:9;37583:4;37579:20;37575:1;37564:9;37560:17;37553:47;37614:131;37740:4;37614:131;;;37606:139;;37510:245;;;;37762:407;;37953:2;37942:9;37938:18;37930:26;;38003:9;37997:4;37993:20;37989:1;37978:9;37974:17;37967:47;38028:131;38154:4;38028:131;;;38020:139;;37924:245;;;;38176:213;;38294:2;38283:9;38279:18;38271:26;;38308:71;38376:1;38365:9;38361:17;38352:6;38308:71;;;38265:124;;;;;38396:205;;38510:2;38499:9;38495:18;38487:26;;38524:67;38588:1;38577:9;38573:17;38564:6;38524:67;;;38481:120;;;;;38608:88;;38685:5;38679:12;38669:22;;38663:33;;;;38704:163;;38819:6;38814:3;38807:19;38856:4;38851:3;38847:14;38832:29;;38800:67;;;;;38875:105;;38944:31;38969:5;38944:31;;;38933:42;;38927:53;;;;38987:92;;39067:5;39060:13;39053:21;39042:32;;39036:43;;;;39086:128;;39166:42;39159:5;39155:54;39144:65;;39138:76;;;;39221:79;;39290:5;39279:16;;39273:27;;;;39307:88;;39385:4;39378:5;39374:16;39363:27;;39357:38;;;;39402:105;;39471:31;39496:5;39471:31;;;39460:42;;39454:53;;;;39514:92;;39594:5;39587:13;39580:21;39569:32;;39563:43;;;;39613:128;;39693:42;39686:5;39682:54;39671:65;;39665:76;;;;39748:79;;39817:5;39806:16;;39800:27;;;;39834:129;;39921:37;39952:5;39921:37;;;39908:50;;39902:61;;;;39970:151;;40064:52;40110:5;40064:52;;;40051:65;;40045:76;;;;40128:130;;40222:31;40247:5;40222:31;;;40209:44;;40203:55;;;;40265:121;;40344:37;40375:5;40344:37;;;40331:50;;40325:61;;;;40393:115;;40472:31;40497:5;40472:31;;;40459:44;;40453:55;;;;40516:268;40581:1;40588:101;40602:6;40599:1;40596:13;40588:101;;;40678:1;40673:3;40669:11;40663:18;40659:1;40654:3;40650:11;40643:39;40624:2;40621:1;40617:10;40612:15;;40588:101;;;40704:6;40701:1;40698:13;40695:2;;;40769:1;40760:6;40755:3;40751:16;40744:27;40695:2;40565:219;;;;;40792:97;;40880:2;40876:7;40871:2;40864:5;40860:14;40856:28;40846:38;;40840:49;;;",
  "source": "pragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { IERC20 } from \"./interface/IERC20.sol\";\nimport { ERC20Taxable } from \"./ERC20Taxable.sol\";\n\n\n/**\n * @title Signal\n * @dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.\n */\ncontract Signal is ERC20Taxable {\n\n    string public version = \"0.0.1\";\n    string public constant name = \"Signal\";\n    string public constant symbol = \"dB\";\n\n    uint8 public constant decimals = 18;\n    uint8 public taxRatePercent;\n    uint8 public signalPerDai;\n\n    IERC20 public dai;\n    address public governance;\n    address public taxCommunityPool;\n    address public taxDevelopmentPool;\n\n    constructor(address _governance, uint8 _taxRatePercent, address _taxCommunityPool, address _taxDevelopmentPool, IERC20 _dai, uint8 _signalPerDai) public ERC20Taxable(_governance, _taxRatePercent, _taxCommunityPool, _taxDevelopmentPool, _dai, _signalPerDai) {\n        governance = _governance;\n        taxRatePercent = _taxRatePercent;\n        taxCommunityPool = _taxCommunityPool;\n        taxDevelopmentPool = _taxDevelopmentPool;\n        dai = _dai;\n        signalPerDai = _signalPerDai;\n    }\n\n    function mint(uint256 signalValue) public {\n        require(\n            signalValue.mod(10000) == 0,\n            \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\"\n        );\n        require(\n            totalSupply().add(signalValue) > 0,\n            \"Signal::mint: Supply would exceed maximum safe uint (2^256).\"\n        );\n        require(\n            dai.allowance(msg.sender, address(this)) >= signalValue.div(signalPerDai),\n            \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\"\n        );\n        require(\n            dai.transferFrom(msg.sender, address(this), signalValue.div(signalPerDai)),\n            \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\"\n        );\n        require(\n            signalValue.div(signalPerDai).mul(signalPerDai) == signalValue,\n            \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\"\n        );\n        _mint(msg.sender, signalValue);\n    }\n\n    function withdraw(uint256 signalValue) public {\n        require(\n            signalValue.mod(10000) == 0,\n            \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\"\n        );\n        require(\n            msg.sender != 0x0000000000000000000000000000000000000000,\n            \"Signal::withdraw: Withdraw address can not be void address\"\n        );\n        require(\n            balanceOf(msg.sender).sub(signalValue) >= 0,\n            \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\"\n        );\n        require(\n            dai.balanceOf(address(this)) >= signalValue.div(signalPerDai),\n            \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\"\n        );\n        _withdraw(msg.sender, signalValue.div(signalPerDai), signalValue);\n    }\n\n    function setTaxCommunityPool(address _taxCommunityPool) public {\n        require(msg.sender == governance, \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\");\n        taxCommunityPool = _taxCommunityPool;\n    }\n\n    function setTaxDevelopmentPool(address _taxDevelopmentPool) public {\n        require(msg.sender == governance, \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\");\n        taxDevelopmentPool = _taxDevelopmentPool;\n    }\n\n}\n",
  "sourcePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
  "ast": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
    "exportedSymbols": {
      "Signal": [
        2701
      ]
    },
    "id": 2702,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2444,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "id": 2445,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:10"
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol",
        "file": "./interface/IERC20.sol",
        "id": 2447,
        "nodeType": "ImportDirective",
        "scope": 2702,
        "sourceUnit": 4096,
        "src": "58:48:10",
        "symbolAliases": [
          {
            "foreign": 2446,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol",
        "file": "./ERC20Taxable.sol",
        "id": 2449,
        "nodeType": "ImportDirective",
        "scope": 2702,
        "sourceUnit": 834,
        "src": "107:50:10",
        "symbolAliases": [
          {
            "foreign": 2448,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2450,
              "name": "ERC20Taxable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 833,
              "src": "326:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Taxable_$833",
                "typeString": "contract ERC20Taxable"
              }
            },
            "id": 2451,
            "nodeType": "InheritanceSpecifier",
            "src": "326:12:10"
          }
        ],
        "contractDependencies": [
          833,
          4095
        ],
        "contractKind": "contract",
        "documentation": "@title Signal\n@dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
        "fullyImplemented": true,
        "id": 2701,
        "linearizedBaseContracts": [
          2701,
          833,
          4095
        ],
        "name": "Signal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2454,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "346:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2452,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "346:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 2453,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "370:7:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2457,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "383:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2455,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5369676e616c",
              "id": 2456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:8:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d62872fb70a2cde8b5502173f0f27a87945c1aad1b88a223d6b8f808546b59b8",
                "typeString": "literal_string \"Signal\""
              },
              "value": "Signal"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2460,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "427:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2458,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "6442",
              "id": 2459,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:4:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                "typeString": "literal_string \"dB\""
              },
              "value": "dB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2463,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "470:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2461,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "470:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 2462,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2465,
            "name": "taxRatePercent",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "511:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2464,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2467,
            "name": "signalPerDai",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "544:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2466,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "544:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2469,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "576:17:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4095",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2468,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4095,
              "src": "576:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4095",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2471,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "599:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2470,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2473,
            "name": "taxCommunityPool",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "630:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2472,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2475,
            "name": "taxDevelopmentPool",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "667:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2474,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2522,
              "nodeType": "Block",
              "src": "964:237:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2498,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2471,
                      "src": "974:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "987:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "974:24:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2502,
                      "name": "taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2465,
                      "src": "1008:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2503,
                      "name": "_taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "1025:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1008:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2505,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2506,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2473,
                      "src": "1050:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2507,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "1069:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1050:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2509,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2510,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2475,
                      "src": "1096:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2511,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "1117:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1096:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2513,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:40:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2514,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "1146:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4095",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2515,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "1152:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4095",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1146:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2517,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:10:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2518,
                      "name": "signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "1166:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2519,
                      "name": "_signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1181:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1166:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2521,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:28:10"
                }
              ]
            },
            "documentation": null,
            "id": 2523,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2490,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2477,
                    "src": "873:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2491,
                    "name": "_taxRatePercent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2479,
                    "src": "886:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2492,
                    "name": "_taxCommunityPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2481,
                    "src": "903:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2493,
                    "name": "_taxDevelopmentPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2483,
                    "src": "922:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2494,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2485,
                    "src": "943:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2495,
                    "name": "_signalPerDai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2487,
                    "src": "949:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2489,
                  "name": "ERC20Taxable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 833,
                  "src": "860:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Taxable_$833_$",
                    "typeString": "type(contract ERC20Taxable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "860:103:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2477,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "719:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2479,
                  "name": "_taxRatePercent",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "740:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2478,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2481,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "763:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2483,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "790:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2485,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "819:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4095",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2484,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4095,
                    "src": "819:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "name": "_signalPerDai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "832:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:134:10"
            },
            "returnParameters": {
              "id": 2497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:10"
            },
            "scope": 2701,
            "src": "707:494:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "1249:1096:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1296:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2529,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1280:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4481,
                            "src": "1280:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1280:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1280:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f6620746865205369676e616c20616d6f756e74202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1259:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2542,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1520:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2539,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "1502:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1502:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4460,
                            "src": "1502:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1502:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1535:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1502:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20537570706c7920776f756c6420657863656564206d6178696d756d20736166652075696e742028325e323536292e",
                        "id": 2546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:62:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        },
                        "value": "Signal::mint: Supply would exceed maximum safe uint (2^256)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        }
                      ],
                      "id": 2538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1481:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:141:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:141:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5004,
                                "src": "1667:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1667:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2555,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5056,
                                  "src": "1687:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1679:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2550,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2469,
                              "src": "1653:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4095",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4052,
                            "src": "1653:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2560,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "1713:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2558,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1697:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "1697:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1697:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1653:73:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a2044414920616c6c6f77616e6365206973206e6f742073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:86:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI allowance is not sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:204:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2565,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:204:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5004,
                              "src": "1884:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1884:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2572,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5056,
                                "src": "1904:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Signal_$2701",
                                  "typeString": "contract Signal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Signal_$2701",
                                  "typeString": "contract Signal"
                                }
                              ],
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1896:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2576,
                                "name": "signalPerDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2467,
                                "src": "1927:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2574,
                                "name": "signalValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2525,
                                "src": "1911:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4410,
                              "src": "1911:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1911:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2567,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2469,
                            "src": "1867:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4095",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4072,
                          "src": "1867:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1867:74:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20444149207472616e73666572206661696c65642c206d616b652073757265204441492062616c616e63652069732073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1955:111:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1846:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:230:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2581,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:230:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2588,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "2141:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2585,
                                  "name": "signalPerDai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2467,
                                  "src": "2123:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2583,
                                  "name": "signalValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2525,
                                  "src": "2107:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4410,
                                "src": "2107:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2107:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4385,
                            "src": "2107:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2590,
                          "name": "signalValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2525,
                          "src": "2158:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b2028747279207573696e67206c6573732064656772656573206f6620707265636973696f6e2f646563696d616c20706c61636573292e",
                        "id": 2592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:105:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        },
                        "value": "Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        }
                      ],
                      "id": 2582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2086:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2594,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "2314:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2314:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2598,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2525,
                        "src": "2326:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2595,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2308:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2600,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2525,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "1221:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:21:10"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:10"
            },
            "scope": 2701,
            "src": "1207:1138:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2663,
              "nodeType": "Block",
              "src": "2397:868:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2444:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2608,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "2428:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4481,
                            "src": "2428:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2428:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a5f77697468647261773a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2407:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "2650:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2650:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2664:42:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "2650:56:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a20576974686472617720616464726573732063616e206e6f7420626520766f69642061646472657373",
                        "id": 2622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:60:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        },
                        "value": "Signal::withdraw: Withdraw address can not be void address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        }
                      ],
                      "id": 2617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2629:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:161:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2624,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:161:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2631,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "2847:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2627,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5004,
                                    "src": "2831:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2831:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2626,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "2821:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4435,
                            "src": "2821:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2821:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2821:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a205769746864726177206164647265737320646f6573206e6f7420686176652062616c616e63652073756666696369656e7420746f2066756c66696c2077697468647261772072657175657374",
                        "id": 2635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:96:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        },
                        "value": "Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        }
                      ],
                      "id": 2625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2800:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:184:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:184:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2642,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5056,
                                  "src": "3037:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3029:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3029:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2639,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2469,
                              "src": "3015:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4095",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4034,
                            "src": "3015:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2647,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "3063:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2645,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "3047:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "3047:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3015:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a204441492072657365727665206973206e6f74206c6172676520656e6f75676820746f2066756c66696c20746869732077697468647261772072657175657374",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3090:83:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        },
                        "value": "Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        }
                      ],
                      "id": 2638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2994:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2994:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:189:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "3203:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3203:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2658,
                            "name": "signalPerDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2467,
                            "src": "3231:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2656,
                            "name": "signalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "3215:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4410,
                          "src": "3215:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2660,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2604,
                        "src": "3246:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2653,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "3193:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:65:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2662,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:65:10"
                }
              ]
            },
            "documentation": null,
            "id": 2664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "2369:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2368:21:10"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:10"
            },
            "scope": 2701,
            "src": "2351:914:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "3334:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "3352:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3352:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2672,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2471,
                          "src": "3366:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3352:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178436f6d6d756e697479506f6f6c3a20436f6d6d756e6974792074617820706f6f6c20616464726573732063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:92:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        },
                        "value": "Governance::setTaxCommunityPool: Community tax pool address can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        }
                      ],
                      "id": 2669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "3344:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3344:127:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2676,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:127:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2677,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2473,
                      "src": "3481:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2678,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "3500:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3481:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2680,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:36:10"
                }
              ]
            },
            "documentation": null,
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxCommunityPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "3300:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:27:10"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3334:0:10"
            },
            "scope": 2701,
            "src": "3271:253:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "3597:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2688,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "3615:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3615:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2690,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2471,
                          "src": "3629:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3615:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178446576656c6f706d656e74506f6f6c3a20446576656c6f706d656e742074617820706f6f6c2063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3641:88:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        },
                        "value": "Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        }
                      ],
                      "id": 2687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "3607:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3607:123:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2694,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:123:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2695,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2475,
                      "src": "3740:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2696,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2684,
                      "src": "3761:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3740:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "3740:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxDevelopmentPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3561:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3560:29:10"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3597:0:10"
            },
            "scope": 2701,
            "src": "3530:257:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2702,
        "src": "307:3483:10"
      }
    ],
    "src": "0:3791:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
    "exportedSymbols": {
      "Signal": [
        2701
      ]
    },
    "id": 2702,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2444,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "id": 2445,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:10"
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol",
        "file": "./interface/IERC20.sol",
        "id": 2447,
        "nodeType": "ImportDirective",
        "scope": 2702,
        "sourceUnit": 4096,
        "src": "58:48:10",
        "symbolAliases": [
          {
            "foreign": 2446,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol",
        "file": "./ERC20Taxable.sol",
        "id": 2449,
        "nodeType": "ImportDirective",
        "scope": 2702,
        "sourceUnit": 834,
        "src": "107:50:10",
        "symbolAliases": [
          {
            "foreign": 2448,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2450,
              "name": "ERC20Taxable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 833,
              "src": "326:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Taxable_$833",
                "typeString": "contract ERC20Taxable"
              }
            },
            "id": 2451,
            "nodeType": "InheritanceSpecifier",
            "src": "326:12:10"
          }
        ],
        "contractDependencies": [
          833,
          4095
        ],
        "contractKind": "contract",
        "documentation": "@title Signal\n@dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
        "fullyImplemented": true,
        "id": 2701,
        "linearizedBaseContracts": [
          2701,
          833,
          4095
        ],
        "name": "Signal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2454,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "346:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2452,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "346:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 2453,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "370:7:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2457,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "383:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2455,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5369676e616c",
              "id": 2456,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:8:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d62872fb70a2cde8b5502173f0f27a87945c1aad1b88a223d6b8f808546b59b8",
                "typeString": "literal_string \"Signal\""
              },
              "value": "Signal"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2460,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "427:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2458,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "6442",
              "id": 2459,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:4:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                "typeString": "literal_string \"dB\""
              },
              "value": "dB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2463,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "470:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2461,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "470:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 2462,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2465,
            "name": "taxRatePercent",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "511:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2464,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2467,
            "name": "signalPerDai",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "544:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2466,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "544:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2469,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "576:17:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4095",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2468,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4095,
              "src": "576:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4095",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2471,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "599:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2470,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2473,
            "name": "taxCommunityPool",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "630:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2472,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2475,
            "name": "taxDevelopmentPool",
            "nodeType": "VariableDeclaration",
            "scope": 2701,
            "src": "667:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2474,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2522,
              "nodeType": "Block",
              "src": "964:237:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2498,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2471,
                      "src": "974:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "987:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "974:24:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2502,
                      "name": "taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2465,
                      "src": "1008:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2503,
                      "name": "_taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "1025:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1008:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2505,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2506,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2473,
                      "src": "1050:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2507,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "1069:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1050:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2509,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2510,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2475,
                      "src": "1096:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2511,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "1117:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1096:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2513,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:40:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2514,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "1146:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4095",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2515,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "1152:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4095",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1146:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2517,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:10:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2518,
                      "name": "signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "1166:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2519,
                      "name": "_signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1181:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1166:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2521,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:28:10"
                }
              ]
            },
            "documentation": null,
            "id": 2523,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2490,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2477,
                    "src": "873:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2491,
                    "name": "_taxRatePercent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2479,
                    "src": "886:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2492,
                    "name": "_taxCommunityPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2481,
                    "src": "903:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2493,
                    "name": "_taxDevelopmentPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2483,
                    "src": "922:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2494,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2485,
                    "src": "943:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2495,
                    "name": "_signalPerDai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2487,
                    "src": "949:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2489,
                  "name": "ERC20Taxable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 833,
                  "src": "860:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Taxable_$833_$",
                    "typeString": "type(contract ERC20Taxable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "860:103:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2477,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "719:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2479,
                  "name": "_taxRatePercent",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "740:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2478,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2481,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "763:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2483,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "790:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2485,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "819:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4095",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2484,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4095,
                    "src": "819:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4095",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "name": "_signalPerDai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2523,
                  "src": "832:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:134:10"
            },
            "returnParameters": {
              "id": 2497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:10"
            },
            "scope": 2701,
            "src": "707:494:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "1249:1096:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1296:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2529,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1280:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4481,
                            "src": "1280:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1280:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1280:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f6620746865205369676e616c20616d6f756e74202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1259:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2542,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1520:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2539,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "1502:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1502:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4460,
                            "src": "1502:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1502:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1535:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1502:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20537570706c7920776f756c6420657863656564206d6178696d756d20736166652075696e742028325e323536292e",
                        "id": 2546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:62:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        },
                        "value": "Signal::mint: Supply would exceed maximum safe uint (2^256)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        }
                      ],
                      "id": 2538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1481:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:141:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:141:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5004,
                                "src": "1667:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1667:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2555,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5056,
                                  "src": "1687:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1679:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2550,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2469,
                              "src": "1653:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4095",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4052,
                            "src": "1653:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2560,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "1713:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2558,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "1697:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "1697:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1697:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1653:73:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a2044414920616c6c6f77616e6365206973206e6f742073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:86:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI allowance is not sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:204:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2565,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:204:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5004,
                              "src": "1884:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1884:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2572,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5056,
                                "src": "1904:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Signal_$2701",
                                  "typeString": "contract Signal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Signal_$2701",
                                  "typeString": "contract Signal"
                                }
                              ],
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1896:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2576,
                                "name": "signalPerDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2467,
                                "src": "1927:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2574,
                                "name": "signalValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2525,
                                "src": "1911:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4410,
                              "src": "1911:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1911:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2567,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2469,
                            "src": "1867:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4095",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4072,
                          "src": "1867:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1867:74:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20444149207472616e73666572206661696c65642c206d616b652073757265204441492062616c616e63652069732073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1955:111:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "1846:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:230:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2581,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:230:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2588,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "2141:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2585,
                                  "name": "signalPerDai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2467,
                                  "src": "2123:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2583,
                                  "name": "signalValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2525,
                                  "src": "2107:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4410,
                                "src": "2107:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2107:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4385,
                            "src": "2107:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2590,
                          "name": "signalValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2525,
                          "src": "2158:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b2028747279207573696e67206c6573732064656772656573206f6620707265636973696f6e2f646563696d616c20706c61636573292e",
                        "id": 2592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:105:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        },
                        "value": "Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        }
                      ],
                      "id": 2582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2086:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2594,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "2314:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2314:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2598,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2525,
                        "src": "2326:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2595,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2308:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2600,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2525,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2602,
                  "src": "1221:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:21:10"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:10"
            },
            "scope": 2701,
            "src": "1207:1138:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2663,
              "nodeType": "Block",
              "src": "2397:868:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2444:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2608,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "2428:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4481,
                            "src": "2428:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2428:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a5f77697468647261773a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2407:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2618,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "2650:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2650:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2664:42:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "2650:56:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a20576974686472617720616464726573732063616e206e6f7420626520766f69642061646472657373",
                        "id": 2622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:60:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        },
                        "value": "Signal::withdraw: Withdraw address can not be void address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        }
                      ],
                      "id": 2617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2629:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:161:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2624,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:161:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2631,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "2847:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2627,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5004,
                                    "src": "2831:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2831:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2626,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "2821:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4435,
                            "src": "2821:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2821:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2821:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a205769746864726177206164647265737320646f6573206e6f7420686176652062616c616e63652073756666696369656e7420746f2066756c66696c2077697468647261772072657175657374",
                        "id": 2635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:96:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        },
                        "value": "Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        }
                      ],
                      "id": 2625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2800:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:184:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:184:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2642,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5056,
                                  "src": "3037:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2701",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3029:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3029:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2639,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2469,
                              "src": "3015:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4095",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4034,
                            "src": "3015:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2647,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2467,
                              "src": "3063:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2645,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "3047:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4410,
                            "src": "3047:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3015:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a204441492072657365727665206973206e6f74206c6172676520656e6f75676820746f2066756c66696c20746869732077697468647261772072657175657374",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3090:83:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        },
                        "value": "Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        }
                      ],
                      "id": 2638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "2994:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2994:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:189:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5004,
                          "src": "3203:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3203:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2658,
                            "name": "signalPerDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2467,
                            "src": "3231:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2656,
                            "name": "signalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2604,
                            "src": "3215:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4410,
                          "src": "3215:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2660,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2604,
                        "src": "3246:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2653,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "3193:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:65:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2662,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:65:10"
                }
              ]
            },
            "documentation": null,
            "id": 2664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "2369:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2368:21:10"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:10"
            },
            "scope": 2701,
            "src": "2351:914:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "3334:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "3352:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3352:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2672,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2471,
                          "src": "3366:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3352:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178436f6d6d756e697479506f6f6c3a20436f6d6d756e6974792074617820706f6f6c20616464726573732063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3378:92:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        },
                        "value": "Governance::setTaxCommunityPool: Community tax pool address can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        }
                      ],
                      "id": 2669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "3344:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3344:127:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2676,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:127:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2677,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2473,
                      "src": "3481:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2678,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "3500:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3481:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2680,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:36:10"
                }
              ]
            },
            "documentation": null,
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxCommunityPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "3300:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:27:10"
            },
            "returnParameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3334:0:10"
            },
            "scope": 2701,
            "src": "3271:253:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "3597:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2688,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5004,
                            "src": "3615:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3615:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2690,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2471,
                          "src": "3629:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3615:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178446576656c6f706d656e74506f6f6c3a20446576656c6f706d656e742074617820706f6f6c2063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3641:88:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        },
                        "value": "Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        }
                      ],
                      "id": 2687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5007,
                        5008
                      ],
                      "referencedDeclaration": 5008,
                      "src": "3607:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3607:123:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2694,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:123:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2695,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2475,
                      "src": "3740:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2696,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2684,
                      "src": "3761:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3740:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2698,
                  "nodeType": "ExpressionStatement",
                  "src": "3740:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxDevelopmentPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3561:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3560:29:10"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3597:0:10"
            },
            "scope": 2701,
            "src": "3530:257:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2702,
        "src": "307:3483:10"
      }
    ],
    "src": "0:3791:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x3EA1F1b44f46abb8Eb38fe4602568521971Fca88",
      "transactionHash": "0x09a6ea051ccdcdea25f45e0baa63c1cb0492c48a34bcea53f19c1290cd93439f"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-09-14T08:11:29.439Z",
  "devdoc": {
    "details": "ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Signal"
  },
  "userdoc": {
    "methods": {}
  }
}