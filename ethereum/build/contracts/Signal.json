{
  "contractName": "Signal",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxCommunityPool",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxDevelopmentPool",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxRatePercent",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "signalPerDai",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_governance",
          "type": "address"
        },
        {
          "name": "_taxRatePercent",
          "type": "uint8"
        },
        {
          "name": "_taxCommunityPool",
          "type": "address"
        },
        {
          "name": "_taxDevelopmentPool",
          "type": "address"
        },
        {
          "name": "_dai",
          "type": "address"
        },
        {
          "name": "_signalPerDai",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "taxAmount",
          "type": "uint256"
        }
      ],
      "name": "Tax",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "signalValue",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "signalValue",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "getTaxedValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxCommunityPool",
          "type": "address"
        }
      ],
      "name": "setTaxCommunityPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_taxDevelopmentPool",
          "type": "address"
        }
      ],
      "name": "setTaxDevelopmentPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"getTaxedValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"signalValue\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_taxCommunityPool\",\"type\":\"address\"}],\"name\":\"setTaxCommunityPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxCommunityPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxDevelopmentPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"signalValue\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxRatePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signalPerDai\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_taxDevelopmentPool\",\"type\":\"address\"}],\"name\":\"setTaxDevelopmentPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_governance\",\"type\":\"address\"},{\"name\":\"_taxRatePercent\",\"type\":\"uint8\"},{\"name\":\"_taxCommunityPool\",\"type\":\"address\"},{\"name\":\"_taxDevelopmentPool\",\"type\":\"address\"},{\"name\":\"_dai\",\"type\":\"address\"},{\"name\":\"_signalPerDai\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"taxAmount\",\"type\":\"uint256\"}],\"name\":\"Tax\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Signal\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol\":\"Signal\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol\":{\"keccak256\":\"0x5c0b7ae4e288553aa9f83e705deb621e427ff3e4ea3a39320025e0b2acc8dceb\",\"urls\":[\"bzzr://f687bd85c2d123981e692d19ae500e39899493ebf7816e58902366c3feb95ae3\"]},\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol\":{\"keccak256\":\"0xdf6e7512f150d1f737727e5e140fefdd40349bf338902fca70dbc5fb6f1124d6\",\"urls\":[\"bzzr://983882ff1a9662e9c2fe46851cbc25cbcacfd804cdb489decf57cc70192fa519\"]},\"/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol\":{\"keccak256\":\"0x77ce00152b9cc7c03ab444476e9280f3b77d5de3cd16f314b43fdc94b5178ae7\",\"urls\":[\"bzzr://0666fb305f8dd64cb5ee03db493c30c685d74f0f444e4a7e2dfc7b996d3f6a65\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4d2395bda94bb5bb6c524ecda59f07fd6a6d754277e9982143c3858e35145189\",\"urls\":[\"bzzr://5d8b1a44381d54d7c5db45eeb163e74a1c8f61152780eb0769442fbd19aeb52b\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "307:4216:10:-;;;346:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;707:494;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:494:10;;;;;;;;;;;;;;;;;;;;;;873:11;886:15;903:17;922:19;943:4;949:13;1941:11:1;1928:10;;:24;;;;;;;;;;;;;;;;;;1979:15;1962:14;;:32;;;;;;;;;;;;;;;;;;2023:17;2004:16;;:36;;;;;;;;;;;;;;;;;;2071:19;2050:18;;:40;;;;;;;;;;;;;;;;;;2106:4;2100:3;;:10;;;;;;;;;;;;;;;;;;2135:13;2120:12;;:28;;;;;;;;;;;;;;;;;;1765:390;;;;;;987:11:10;974:10;;:24;;;;;;;;;;;;;;;;;;1025:15;1008:14;;:32;;;;;;;;;;;;;;;;;;1069:17;1050:16;;:36;;;;;;;;;;;;;;;;;;1117:19;1096:18;;:40;;;;;;;;;;;;;;;;;;1152:4;1146:3;;:10;;;;;;;;;;;;;;;;;;1181:13;1166:12;;:28;;;;;;;;;;;;;;;;;;707:494;;;;;;307:4216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:152;;227:54;273:6;267:13;227:54;;;218:63;;212:74;;;;;293:118;;369:37;398:6;392:13;369:37;;;360:46;;354:57;;;;;418:968;;;;;;;629:3;617:9;608:7;604:23;600:33;597:2;;;646:1;643;636:12;597:2;681:1;698:64;754:7;745:6;734:9;730:22;698:64;;;688:74;;660:108;799:2;817:62;871:7;862:6;851:9;847:22;817:62;;;807:72;;778:107;916:2;934:64;990:7;981:6;970:9;966:22;934:64;;;924:74;;895:109;1035:2;1053:64;1109:7;1100:6;1089:9;1085:22;1053:64;;;1043:74;;1014:109;1154:3;1173:79;1244:7;1235:6;1224:9;1220:22;1173:79;;;1163:89;;1133:125;1289:3;1308:62;1362:7;1353:6;1342:9;1338:22;1308:62;;;1298:72;;1268:108;591:795;;;;;;;;;1393:105;;1462:31;1487:5;1462:31;;;1451:42;;1445:53;;;;1505:120;;1589:31;1614:5;1589:31;;;1578:42;;1572:53;;;;1632:128;;1712:42;1705:5;1701:54;1690:65;;1684:76;;;;1767:88;;1845:4;1838:5;1834:16;1823:27;;1817:38;;;;307:4216:10;;;;;;;",
  "deployedSourceMap": "307:4216:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:4216:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:38;;;:::i;:::-;;;;;;;;;;;;;;;;3221:145:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3271:727:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2215:89:1;;;:::i;:::-;;;;;;;;;;;;;;;;3823:315;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2351:914:10;;;;;;;;;;;;;;;;:::i;:::-;;470:35;;;:::i;:::-;;;;;;;;;;;;;;;;4533:203:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4004:253:10;;;;;;;;;;;;;;;;:::i;:::-;;346:31;;;:::i;:::-;;;;;;;;;;;;;;;;599:25;;;:::i;:::-;;;;;;;;;;;;;;;;630:31;;;:::i;:::-;;;;;;;;;;;;;;;;2362:108:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;667:33:10;;;:::i;:::-;;;;;;;;;;;;;;;;427:36;;;:::i;:::-;;;;;;;;;;;;;;;;1207:1138;;;;;;;;;;;;;;;;:::i;:::-;;5223:213:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2673:220;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;511:27:10;;;:::i;:::-;;;;;;;;;;;;;;;;2951:132:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;544:25:10;;;:::i;:::-;;;;;;;;;;;;;;;;4263:257;;;;;;;;;;;;;;;;:::i;:::-;;576:17;;;:::i;:::-;;;;;;;;;;;;;;;;383:38;;;;;;;;;;;;;;;;;;;:::o;3221:145:1:-;3286:4;3302:36;3311:10;3323:7;3332:5;3302:8;:36::i;:::-;3355:4;3348:11;;3221:145;;;;:::o;3271:727:10:-;3330:7;3517:1;3496:17;3507:5;3496:6;:10;;:17;;;;:::i;:::-;:22;3475:189;;;;;;;;;;;;;;;;;;;;;;3674:16;3693:35;3724:3;3693:26;3704:14;;;;;;;;;;;3693:26;;:6;:10;;:26;;;;:::i;:::-;:30;;:35;;;;:::i;:::-;3674:54;;3790:1;3779:8;:12;3771:38;;;;;;;;;;;;;;;;;;;;;;3819:22;3844:20;3855:8;3844:6;:10;;:20;;;;:::i;:::-;3819:45;;3927:1;3910:14;:18;3902:58;;;;;;;;;;;;;;;;;;;;;;3977:14;3970:21;;;;3271:727;;;:::o;2215:89:1:-;2259:7;2285:12;;2278:19;;2215:89;:::o;3823:315::-;3912:4;3928:22;3953:20;3958:6;3966;3953:4;:20::i;:::-;3928:45;;3983:44;3993:6;4001:9;4012:14;3983:9;:44::i;:::-;4037:73;4046:6;4054:10;4066:43;4102:6;4066:11;:19;4078:6;4066:19;;;;;;;;;;;;;;;:31;4086:10;4066:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;4037:8;:73::i;:::-;4127:4;4120:11;;;3823:315;;;;;:::o;2351:914:10:-;2454:1;2428:22;2444:5;2428:11;:15;;:22;;;;:::i;:::-;:27;2407:212;;;;;;;;;;;;;;;;;;;;;;2664:42;2650:56;;:10;:56;;;;2629:161;;;;;;;;;;;;;;;;;;;;;;2863:1;2821:38;2847:11;2821:21;2831:10;2821:9;:21::i;:::-;:25;;:38;;;;:::i;:::-;:43;;2800:184;;;;;;;;;;;;;;;;;;;;;;3047:29;3063:12;;;;;;;;;;;3047:29;;:11;:15;;:29;;;;:::i;:::-;3015:3;;;;;;;;;;;:13;;;3037:4;3015:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3015:28:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3015:28:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3015:28:10;;;;;;;;;:61;;2994:189;;;;;;;;;;;;;;;;;;;;;;3193:65;3203:10;3215:29;3231:12;;;;;;;;;;;3215:29;;:11;:15;;:29;;;;:::i;:::-;3246:11;3193:9;:65::i;:::-;2351:914;:::o;470:35::-;503:2;470:35;:::o;4533:203:1:-;4613:4;4629:79;4638:10;4650:7;4659:48;4696:10;4659:11;:23;4671:10;4659:23;;;;;;;;;;;;;;;:32;4683:7;4659:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;4629:8;:79::i;:::-;4725:4;4718:11;;4533:203;;;;:::o;4004:253:10:-;4099:10;;;;;;;;;;;4085:24;;:10;:24;;;4077:127;;;;;;;;;;;;;;;;;;;;;;4233:17;4214:16;;:36;;;;;;;;;;;;;;;;;;4004:253;:::o;346:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;599:25::-;;;;;;;;;;;;;:::o;630:31::-;;;;;;;;;;;;;:::o;2362:108:1:-;2419:7;2445:9;:18;2455:7;2445:18;;;;;;;;;;;;;;;;2438:25;;2362:108;;;:::o;667:33:10:-;;;;;;;;;;;;;:::o;427:36::-;;;;;;;;;;;;;;;;;;;:::o;1207:1138::-;1306:1;1280:22;1296:5;1280:11;:15;;:22;;;;:::i;:::-;:27;1259:212;;;;;;;;;;;;;;;;;;;;;;1535:1;1502:30;1520:11;1502:13;:11;:13::i;:::-;:17;;:30;;;;:::i;:::-;:34;1481:141;;;;;;;;;;;;;;;;;;;;;;1697:29;1713:12;;;;;;;;;;;1697:29;;:11;:15;;:29;;;;:::i;:::-;1653:3;;;;;;;;;;;:13;;;1667:10;1687:4;1653:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:40:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1653:40:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1653:40:10;;;;;;;;;:73;;1632:204;;;;;;;;;;;;;;;;;;;;;;1867:3;;;;;;;;;;;:16;;;1884:10;1904:4;1911:29;1927:12;;;;;;;;;;;1911:29;;:11;:15;;:29;;;;:::i;:::-;1867:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1867:74:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1867:74:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1867:74:10;;;;;;;;;1846:230;;;;;;;;;;;;;;;;;;;;;;2158:11;2107:47;2141:12;;;;;;;;;;;2107:47;;:29;2123:12;;;;;;;;;;;2107:29;;:11;:15;;:29;;;;:::i;:::-;:33;;:47;;;;:::i;:::-;:62;2086:212;;;;;;;;;;;;;;;;;;;;;;2308:30;2314:10;2326:11;2308:5;:30::i;:::-;1207:1138;:::o;5223:213:1:-;5308:4;5324:84;5333:10;5345:7;5354:53;5391:15;5354:11;:23;5366:10;5354:23;;;;;;;;;;;;;;;:32;5378:7;5354:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;5324:8;:84::i;:::-;5425:4;5418:11;;5223:213;;;;:::o;2673:220::-;2742:4;2758:22;2783:24;2788:10;2800:6;2783:4;:24::i;:::-;2758:49;;2817:48;2827:10;2839:9;2850:14;2817:9;:48::i;:::-;2882:4;2875:11;;;2673:220;;;;:::o;511:27:10:-;;;;;;;;;;;;;:::o;2951:132:1:-;3023:7;3049:11;:18;3061:5;3049:18;;;;;;;;;;;;;;;:27;3068:7;3049:27;;;;;;;;;;;;;;;;3042:34;;2951:132;;;;:::o;544:25:10:-;;;;;;;;;;;;;:::o;4263:257::-;4362:10;;;;;;;;;;;4348:24;;:10;:24;;;4340:123;;;;;;;;;;;;;;;;;;;;;;4494:19;4473:18;;:40;;;;;;;;;;;;;;;;;;4263:257;:::o;576:17::-;;;;;;;;;;;;;:::o;11618:329:1:-;11727:1;11710:19;;:5;:19;;;;11702:68;;;;;;;;;;;;;;;;;;;;;;11807:1;11788:21;;:7;:21;;;;11780:68;;;;;;;;;;;;;;;;;;;;;;11889:5;11859:11;:18;11871:5;11859:18;;;;;;;;;;;;;;;:27;11878:7;11859:27;;;;;;;;;;;;;;;:35;;;;11925:7;11909:31;;11918:5;11909:31;;;11934:5;11909:31;;;;;;;;;;;;;;;11618:329;;;:::o;1873:160:33:-;1931:7;1963:1;1958;:6;;1950:54;;;;;;;;;;;;;;;;;;;;;;2025:1;2021;:5;;;;;;2014:12;;1873:160;;;;:::o;229:456::-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:54;;;;;;;;;;;;;;;;;;;;;;677:1;670:8;;;229:456;;;;;:::o;813:335::-;871:7;968:1;964;:5;956:53;;;;;;;;;;;;;;;;;;;;;;1019:9;1035:1;1031;:5;;;;;;1019:17;;1140:1;1133:8;;;813:335;;;;:::o;1279:181::-;1337:7;1369:1;1364;:6;;1356:51;;;;;;;;;;;;;;;;;;;;;;1417:9;1433:1;1429;:5;1417:17;;1452:1;1445:8;;;1279:181;;;;:::o;6859:1378:1:-;6922:7;7016:1;6995:17;7006:5;6995:6;:10;;:17;;;;:::i;:::-;:22;6974:189;;;;;;;;;;;;;;;;;;;;;;7173:24;7200:35;7231:3;7200:26;7211:14;;;;;;;;;;;7200:26;;:6;:10;;:26;;;;:::i;:::-;:30;;:35;;;;:::i;:::-;7173:62;;7304:1;7285:16;:20;7277:46;;;;;;;;;;;;;;;;;;;;;;7333:22;7358:23;7379:1;7358:16;:20;;:23;;;;:::i;:::-;7333:48;;7457:22;7482:26;7493:14;7482:6;:10;;:26;;;;:::i;:::-;7457:51;;7571:1;7554:14;:18;7546:58;;;;;;;;;;;;;;;;;;;;;;7682:6;7635:43;7663:14;;;;;;;;;;;7635:43;;:23;7654:3;7635:14;:18;;:23;;;;:::i;:::-;:27;;:43;;;;:::i;:::-;:53;7614:165;;;;;;;;;;;;;;;;;;;;;;7834:6;7815:14;7798;:31;7797:43;7789:113;;;;;;;;;;;;;;;;;;;;;;7912:53;7922:6;7930:16;;;;;;;;;;;7948;7912:9;:53::i;:::-;8022:55;8032:6;8040:18;;;;;;;;;;;8060:16;8022:9;:55::i;:::-;8145:6;8141:27;;;8153:14;8141:27;;;;;;;;;;;;;;;8185:14;8178:21;;;;;6859:1378;;;;:::o;5910:422::-;6025:1;6007:20;;:6;:20;;;;5999:70;;;;;;;;;;;;;;;;;;;;;;6108:1;6087:23;;:9;:23;;;;6079:71;;;;;;;;;;;;;;;;;;;;;;6181:29;6203:6;6181:9;:17;6191:6;6181:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;6161:9;:17;6171:6;6161:17;;;;;;;;;;;;;;;:49;;;;6243:32;6268:6;6243:9;:20;6253:9;6243:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6220:9;:20;6230:9;6220:20;;;;;;;;;;;;;;;:55;;;;6307:9;6290:35;;6299:6;6290:35;;;6318:6;6290:35;;;;;;;;;;;;;;;5910:422;;;:::o;9256:461::-;9371:3;;;;;;;;;;;:12;;;9384:7;9393:8;9371:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9371:31:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9371:31:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9371:31:1;;;;;;;;;9350:128;;;;;;;;;;;;;;;;;;;;;;9488:30;9494:10;9506:11;9488:5;:30::i;:::-;9599:13;:11;:13::i;:::-;9549:46;9582:12;;;;;;;;;;;9549:46;;:3;;;;;;;;;;;:13;;;9571:4;9549:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9549:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9549:28:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9549:28:1;;;;;;;;;:32;;:46;;;;:::i;:::-;:63;9528:182;;;;;;;;;;;;;;;;;;;;;;9256:461;;;:::o;1541:180:33:-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:50;;;;;;;;;;;;;;;;;;;;;;1713:1;1706:8;;;1541:180;;;;:::o;8507:502:1:-;8616:1;8595:17;8606:5;8595:6;:10;;:17;;;;:::i;:::-;:22;8574:190;;;;;;;;;;;;;;;;;;;;;;8801:1;8782:21;;:7;:21;;;;8774:65;;;;;;;;;;;;;;;;;;;;;;8865:24;8882:6;8865:12;;:16;;:24;;;;:::i;:::-;8850:12;:39;;;;8920:30;8943:6;8920:9;:18;8930:7;8920:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;:51;;;;8986:7;8965:37;;8982:1;8965:37;;;8995:6;8965:37;;;;;;;;;;;;;;;8507:502;;:::o;10687:506::-;10794:1;10774:16;10784:5;10774;:9;;:16;;;;:::i;:::-;:21;10753:196;;;;;;;;;;;;;;;;;;;;;;10986:1;10967:21;;:7;:21;;;;10959:67;;;;;;;;;;;;;;;;;;;;;;11052:23;11069:5;11052:12;;:16;;:23;;;;:::i;:::-;11037:12;:38;;;;11106:29;11129:5;11106:9;:18;11116:7;11106:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;11085:9;:18;11095:7;11085:18;;;;;;;;;;;;;;;:50;;;;11176:1;11150:36;;11159:7;11150:36;;;11180:5;11150:36;;;;;;;;;;;;;;;10687:506;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:116;;205:36;233:6;227:13;205:36;;;196:45;;190:56;;;;;253:118;;320:46;358:6;345:20;320:46;;;311:55;;305:66;;;;;378:122;;456:39;487:6;481:13;456:39;;;447:48;;441:59;;;;;507:241;;611:2;599:9;590:7;586:23;582:32;579:2;;;627:1;624;617:12;579:2;662:1;679:53;724:7;715:6;704:9;700:22;679:53;;;669:63;;641:97;573:175;;;;;755:366;;;876:2;864:9;855:7;851:23;847:32;844:2;;;892:1;889;882:12;844:2;927:1;944:53;989:7;980:6;969:9;965:22;944:53;;;934:63;;906:97;1034:2;1052:53;1097:7;1088:6;1077:9;1073:22;1052:53;;;1042:63;;1013:98;838:283;;;;;;1128:491;;;;1266:2;1254:9;1245:7;1241:23;1237:32;1234:2;;;1282:1;1279;1272:12;1234:2;1317:1;1334:53;1379:7;1370:6;1359:9;1355:22;1334:53;;;1324:63;;1296:97;1424:2;1442:53;1487:7;1478:6;1467:9;1463:22;1442:53;;;1432:63;;1403:98;1532:2;1550:53;1595:7;1586:6;1575:9;1571:22;1550:53;;;1540:63;;1511:98;1228:391;;;;;;1626:366;;;1747:2;1735:9;1726:7;1722:23;1718:32;1715:2;;;1763:1;1760;1753:12;1715:2;1798:1;1815:53;1860:7;1851:6;1840:9;1836:22;1815:53;;;1805:63;;1777:97;1905:2;1923:53;1968:7;1959:6;1948:9;1944:22;1923:53;;;1913:63;;1884:98;1709:283;;;;;;1999:257;;2111:2;2099:9;2090:7;2086:23;2082:32;2079:2;;;2127:1;2124;2117:12;2079:2;2162:1;2179:61;2232:7;2223:6;2212:9;2208:22;2179:61;;;2169:71;;2141:105;2073:183;;;;;2263:241;;2367:2;2355:9;2346:7;2342:23;2338:32;2335:2;;;2383:1;2380;2373:12;2335:2;2418:1;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;;;2425:63;;2397:97;2329:175;;;;;2511:263;;2626:2;2614:9;2605:7;2601:23;2597:32;2594:2;;;2642:1;2639;2632:12;2594:2;2677:1;2694:64;2750:7;2741:6;2730:9;2726:22;2694:64;;;2684:74;;2656:108;2588:186;;;;;2781:142;2872:45;2911:5;2872:45;;;2867:3;2860:58;2854:69;;;2930:120;3013:31;3038:5;3013:31;;;3008:3;3001:44;2995:55;;;3057:111;3134:28;3156:5;3134:28;;;3129:3;3122:41;3116:52;;;3175:156;3273:52;3319:5;3273:52;;;3268:3;3261:65;3255:76;;;3338:339;;3446:35;3475:5;3446:35;;;3493:71;3557:6;3552:3;3493:71;;;3486:78;;3569:52;3614:6;3609:3;3602:4;3595:5;3591:16;3569:52;;;3642:29;3664:6;3642:29;;;3637:3;3633:39;3626:46;;3426:251;;;;;;3685:465;;3845:67;3909:2;3904:3;3845:67;;;3838:74;;3945:66;3941:1;3936:3;3932:11;3925:87;4046:66;4041:2;4036:3;4032:12;4025:88;4141:2;4136:3;4132:12;4125:19;;3831:319;;;;4159:364;;4319:67;4383:2;4378:3;4319:67;;;4312:74;;4419:66;4415:1;4410:3;4406:11;4399:87;4514:2;4509:3;4505:12;4498:19;;4305:218;;;;4532:465;;4692:67;4756:2;4751:3;4692:67;;;4685:74;;4792:66;4788:1;4783:3;4779:11;4772:87;4893:66;4888:2;4883:3;4879:12;4872:88;4988:2;4983:3;4979:12;4972:19;;4678:319;;;;5006:566;;5166:67;5230:2;5225:3;5166:67;;;5159:74;;5266:66;5262:1;5257:3;5253:11;5246:87;5367:66;5362:2;5357:3;5353:12;5346:88;5468:66;5463:2;5458:3;5454:12;5447:88;5563:2;5558:3;5554:12;5547:19;;5152:420;;;;5581:566;;5741:67;5805:2;5800:3;5741:67;;;5734:74;;5841:66;5837:1;5832:3;5828:11;5821:87;5942:66;5937:2;5932:3;5928:12;5921:88;6043:66;6038:2;6033:3;6029:12;6022:88;6138:2;6133:3;6129:12;6122:19;;5727:420;;;;6156:566;;6316:67;6380:2;6375:3;6316:67;;;6309:74;;6416:66;6412:1;6407:3;6403:11;6396:87;6517:66;6512:2;6507:3;6503:12;6496:88;6618:66;6613:2;6608:3;6604:12;6597:88;6713:2;6708:3;6704:12;6697:19;;6302:420;;;;6731:465;;6891:67;6955:2;6950:3;6891:67;;;6884:74;;6991:66;6987:1;6982:3;6978:11;6971:87;7092:66;7087:2;7082:3;7078:12;7071:88;7187:2;7182:3;7178:12;7171:19;;6877:319;;;;7205:364;;7365:67;7429:2;7424:3;7365:67;;;7358:74;;7465:66;7461:1;7456:3;7452:11;7445:87;7560:2;7555:3;7551:12;7544:19;;7351:218;;;;7578:566;;7738:67;7802:2;7797:3;7738:67;;;7731:74;;7838:66;7834:1;7829:3;7825:11;7818:87;7939:66;7934:2;7929:3;7925:12;7918:88;8040:66;8035:2;8030:3;8026:12;8019:88;8135:2;8130:3;8126:12;8119:19;;7724:420;;;;8153:364;;8313:67;8377:2;8372:3;8313:67;;;8306:74;;8413:66;8409:1;8404:3;8400:11;8393:87;8508:2;8503:3;8499:12;8492:19;;8299:218;;;;8526:771;;8686:68;8750:3;8745;8686:68;;;8679:75;;8787:66;8783:1;8778:3;8774:11;8767:87;8888:66;8883:2;8878:3;8874:12;8867:88;8989:66;8984:2;8979:3;8975:12;8968:88;9090:66;9085:2;9080:3;9076:12;9069:88;9192:66;9186:3;9181;9177:13;9170:89;9287:3;9282;9278:13;9271:20;;8672:625;;;;9306:669;;9466:68;9530:3;9525;9466:68;;;9459:75;;9567:66;9563:1;9558:3;9554:11;9547:87;9668:66;9663:2;9658:3;9654:12;9647:88;9769:66;9764:2;9759:3;9755:12;9748:88;9870:66;9865:2;9860:3;9856:12;9849:88;9965:3;9960;9956:13;9949:20;;9452:523;;;;9984:669;;10144:68;10208:3;10203;10144:68;;;10137:75;;10245:66;10241:1;10236:3;10232:11;10225:87;10346:66;10341:2;10336:3;10332:12;10325:88;10447:66;10442:2;10437:3;10433:12;10426:88;10548:66;10543:2;10538:3;10534:12;10527:88;10643:3;10638;10634:13;10627:20;;10130:523;;;;10662:669;;10822:68;10886:3;10881;10822:68;;;10815:75;;10923:66;10919:1;10914:3;10910:11;10903:87;11024:66;11019:2;11014:3;11010:12;11003:88;11125:66;11120:2;11115:3;11111:12;11104:88;11226:66;11221:2;11216:3;11212:12;11205:88;11321:3;11316;11312:13;11305:20;;10808:523;;;;11340:669;;11500:68;11564:3;11559;11500:68;;;11493:75;;11601:66;11597:1;11592:3;11588:11;11581:87;11702:66;11697:2;11692:3;11688:12;11681:88;11803:66;11798:2;11793:3;11789:12;11782:88;11904:66;11899:2;11894:3;11890:12;11883:88;11999:3;11994;11990:13;11983:20;;11486:523;;;;12018:771;;12178:68;12242:3;12237;12178:68;;;12171:75;;12279:66;12275:1;12270:3;12266:11;12259:87;12380:66;12375:2;12370:3;12366:12;12359:88;12481:66;12476:2;12471:3;12467:12;12460:88;12582:66;12577:2;12572:3;12568:12;12561:88;12684:66;12678:3;12673;12669:13;12662:89;12779:3;12774;12770:13;12763:20;;12164:625;;;;12798:566;;12958:67;13022:2;13017:3;12958:67;;;12951:74;;13058:66;13054:1;13049:3;13045:11;13038:87;13159:66;13154:2;13149:3;13145:12;13138:88;13260:66;13255:2;13250:3;13246:12;13239:88;13355:2;13350:3;13346:12;13339:19;;12944:420;;;;13373:566;;13533:67;13597:2;13592:3;13533:67;;;13526:74;;13633:66;13629:1;13624:3;13620:11;13613:87;13734:66;13729:2;13724:3;13720:12;13713:88;13835:66;13830:2;13825:3;13821:12;13814:88;13930:2;13925:3;13921:12;13914:19;;13519:420;;;;13948:465;;14108:67;14172:2;14167:3;14108:67;;;14101:74;;14208:66;14204:1;14199:3;14195:11;14188:87;14309:66;14304:2;14299:3;14295:12;14288:88;14404:2;14399:3;14395:12;14388:19;;14094:319;;;;14422:669;;14582:68;14646:3;14641;14582:68;;;14575:75;;14683:66;14679:1;14674:3;14670:11;14663:87;14784:66;14779:2;14774:3;14770:12;14763:88;14885:66;14880:2;14875:3;14871:12;14864:88;14986:66;14981:2;14976:3;14972:12;14965:88;15081:3;15076;15072:13;15065:20;;14568:523;;;;15100:364;;15260:67;15324:2;15319:3;15260:67;;;15253:74;;15360:66;15356:1;15351:3;15347:11;15340:87;15455:2;15450:3;15446:12;15439:19;;15246:218;;;;15473:465;;15633:67;15697:2;15692:3;15633:67;;;15626:74;;15733:66;15729:1;15724:3;15720:11;15713:87;15834:66;15829:2;15824:3;15820:12;15813:88;15929:2;15924:3;15920:12;15913:19;;15619:319;;;;15947:465;;16107:67;16171:2;16166:3;16107:67;;;16100:74;;16207:66;16203:1;16198:3;16194:11;16187:87;16308:66;16303:2;16298:3;16294:12;16287:88;16403:2;16398:3;16394:12;16387:19;;16093:319;;;;16421:566;;16581:67;16645:2;16640:3;16581:67;;;16574:74;;16681:66;16677:1;16672:3;16668:11;16661:87;16782:66;16777:2;16772:3;16768:12;16761:88;16883:66;16878:2;16873:3;16869:12;16862:88;16978:2;16973:3;16969:12;16962:19;;16567:420;;;;16996:465;;17156:67;17220:2;17215:3;17156:67;;;17149:74;;17256:66;17252:1;17247:3;17243:11;17236:87;17357:66;17352:2;17347:3;17343:12;17336:88;17452:2;17447:3;17443:12;17436:19;;17142:319;;;;17470:669;;17630:68;17694:3;17689;17630:68;;;17623:75;;17731:66;17727:1;17722:3;17718:11;17711:87;17832:66;17827:2;17822:3;17818:12;17811:88;17933:66;17928:2;17923:3;17919:12;17912:88;18034:66;18029:2;18024:3;18020:12;18013:88;18129:3;18124;18120:13;18113:20;;17616:523;;;;18148:465;;18308:67;18372:2;18367:3;18308:67;;;18301:74;;18408:66;18404:1;18399:3;18395:11;18388:87;18509:66;18504:2;18499:3;18495:12;18488:88;18604:2;18599:3;18595:12;18588:19;;18294:319;;;;18622:465;;18782:67;18846:2;18841:3;18782:67;;;18775:74;;18882:66;18878:1;18873:3;18869:11;18862:87;18983:66;18978:2;18973:3;18969:12;18962:88;19078:2;19073:3;19069:12;19062:19;;18768:319;;;;19096:465;;19256:67;19320:2;19315:3;19256:67;;;19249:74;;19356:66;19352:1;19347:3;19343:11;19336:87;19457:66;19452:2;19447:3;19443:12;19436:88;19552:2;19547:3;19543:12;19536:19;;19242:319;;;;19570:364;;19730:67;19794:2;19789:3;19730:67;;;19723:74;;19830:66;19826:1;19821:3;19817:11;19810:87;19925:2;19920:3;19916:12;19909:19;;19716:218;;;;19943:364;;20103:67;20167:2;20162:3;20103:67;;;20096:74;;20203:66;20199:1;20194:3;20190:11;20183:87;20298:2;20293:3;20289:12;20282:19;;20089:218;;;;20316:465;;20476:67;20540:2;20535:3;20476:67;;;20469:74;;20576:66;20572:1;20567:3;20563:11;20556:87;20677:66;20672:2;20667:3;20663:12;20656:88;20772:2;20767:3;20763:12;20756:19;;20462:319;;;;20789:120;20872:31;20897:5;20872:31;;;20867:3;20860:44;20854:55;;;20916:114;20995:29;21018:5;20995:29;;;20990:3;20983:42;20977:53;;;21037:213;;21155:2;21144:9;21140:18;21132:26;;21169:71;21237:1;21226:9;21222:17;21213:6;21169:71;;;21126:124;;;;;21257:340;;21411:2;21400:9;21396:18;21388:26;;21425:79;21501:1;21490:9;21486:17;21477:6;21425:79;;;21515:72;21583:2;21572:9;21568:18;21559:6;21515:72;;;21382:215;;;;;;21604:451;;21786:2;21775:9;21771:18;21763:26;;21800:79;21876:1;21865:9;21861:17;21852:6;21800:79;;;21890:72;21958:2;21947:9;21943:18;21934:6;21890:72;;;21973;22041:2;22030:9;22026:18;22017:6;21973:72;;;21757:298;;;;;;;22062:324;;22208:2;22197:9;22193:18;22185:26;;22222:71;22290:1;22279:9;22275:17;22266:6;22222:71;;;22304:72;22372:2;22361:9;22357:18;22348:6;22304:72;;;22179:207;;;;;;22393:201;;22505:2;22494:9;22490:18;22482:26;;22519:65;22581:1;22570:9;22566:17;22557:6;22519:65;;;22476:118;;;;;22601:243;;22734:2;22723:9;22719:18;22711:26;;22748:86;22831:1;22820:9;22816:17;22807:6;22748:86;;;22705:139;;;;;22851:293;;22985:2;22974:9;22970:18;22962:26;;23035:9;23029:4;23025:20;23021:1;23010:9;23006:17;22999:47;23060:74;23129:4;23120:6;23060:74;;;23052:82;;22956:188;;;;;23151:407;;23342:2;23331:9;23327:18;23319:26;;23392:9;23386:4;23382:20;23378:1;23367:9;23363:17;23356:47;23417:131;23543:4;23417:131;;;23409:139;;23313:245;;;;23565:407;;23756:2;23745:9;23741:18;23733:26;;23806:9;23800:4;23796:20;23792:1;23781:9;23777:17;23770:47;23831:131;23957:4;23831:131;;;23823:139;;23727:245;;;;23979:407;;24170:2;24159:9;24155:18;24147:26;;24220:9;24214:4;24210:20;24206:1;24195:9;24191:17;24184:47;24245:131;24371:4;24245:131;;;24237:139;;24141:245;;;;24393:407;;24584:2;24573:9;24569:18;24561:26;;24634:9;24628:4;24624:20;24620:1;24609:9;24605:17;24598:47;24659:131;24785:4;24659:131;;;24651:139;;24555:245;;;;24807:407;;24998:2;24987:9;24983:18;24975:26;;25048:9;25042:4;25038:20;25034:1;25023:9;25019:17;25012:47;25073:131;25199:4;25073:131;;;25065:139;;24969:245;;;;25221:407;;25412:2;25401:9;25397:18;25389:26;;25462:9;25456:4;25452:20;25448:1;25437:9;25433:17;25426:47;25487:131;25613:4;25487:131;;;25479:139;;25383:245;;;;25635:407;;25826:2;25815:9;25811:18;25803:26;;25876:9;25870:4;25866:20;25862:1;25851:9;25847:17;25840:47;25901:131;26027:4;25901:131;;;25893:139;;25797:245;;;;26049:407;;26240:2;26229:9;26225:18;26217:26;;26290:9;26284:4;26280:20;26276:1;26265:9;26261:17;26254:47;26315:131;26441:4;26315:131;;;26307:139;;26211:245;;;;26463:407;;26654:2;26643:9;26639:18;26631:26;;26704:9;26698:4;26694:20;26690:1;26679:9;26675:17;26668:47;26729:131;26855:4;26729:131;;;26721:139;;26625:245;;;;26877:407;;27068:2;27057:9;27053:18;27045:26;;27118:9;27112:4;27108:20;27104:1;27093:9;27089:17;27082:47;27143:131;27269:4;27143:131;;;27135:139;;27039:245;;;;27291:407;;27482:2;27471:9;27467:18;27459:26;;27532:9;27526:4;27522:20;27518:1;27507:9;27503:17;27496:47;27557:131;27683:4;27557:131;;;27549:139;;27453:245;;;;27705:407;;27896:2;27885:9;27881:18;27873:26;;27946:9;27940:4;27936:20;27932:1;27921:9;27917:17;27910:47;27971:131;28097:4;27971:131;;;27963:139;;27867:245;;;;28119:407;;28310:2;28299:9;28295:18;28287:26;;28360:9;28354:4;28350:20;28346:1;28335:9;28331:17;28324:47;28385:131;28511:4;28385:131;;;28377:139;;28281:245;;;;28533:407;;28724:2;28713:9;28709:18;28701:26;;28774:9;28768:4;28764:20;28760:1;28749:9;28745:17;28738:47;28799:131;28925:4;28799:131;;;28791:139;;28695:245;;;;28947:407;;29138:2;29127:9;29123:18;29115:26;;29188:9;29182:4;29178:20;29174:1;29163:9;29159:17;29152:47;29213:131;29339:4;29213:131;;;29205:139;;29109:245;;;;29361:407;;29552:2;29541:9;29537:18;29529:26;;29602:9;29596:4;29592:20;29588:1;29577:9;29573:17;29566:47;29627:131;29753:4;29627:131;;;29619:139;;29523:245;;;;29775:407;;29966:2;29955:9;29951:18;29943:26;;30016:9;30010:4;30006:20;30002:1;29991:9;29987:17;29980:47;30041:131;30167:4;30041:131;;;30033:139;;29937:245;;;;30189:407;;30380:2;30369:9;30365:18;30357:26;;30430:9;30424:4;30420:20;30416:1;30405:9;30401:17;30394:47;30455:131;30581:4;30455:131;;;30447:139;;30351:245;;;;30603:407;;30794:2;30783:9;30779:18;30771:26;;30844:9;30838:4;30834:20;30830:1;30819:9;30815:17;30808:47;30869:131;30995:4;30869:131;;;30861:139;;30765:245;;;;31017:407;;31208:2;31197:9;31193:18;31185:26;;31258:9;31252:4;31248:20;31244:1;31233:9;31229:17;31222:47;31283:131;31409:4;31283:131;;;31275:139;;31179:245;;;;31431:407;;31622:2;31611:9;31607:18;31599:26;;31672:9;31666:4;31662:20;31658:1;31647:9;31643:17;31636:47;31697:131;31823:4;31697:131;;;31689:139;;31593:245;;;;31845:407;;32036:2;32025:9;32021:18;32013:26;;32086:9;32080:4;32076:20;32072:1;32061:9;32057:17;32050:47;32111:131;32237:4;32111:131;;;32103:139;;32007:245;;;;32259:407;;32450:2;32439:9;32435:18;32427:26;;32500:9;32494:4;32490:20;32486:1;32475:9;32471:17;32464:47;32525:131;32651:4;32525:131;;;32517:139;;32421:245;;;;32673:407;;32864:2;32853:9;32849:18;32841:26;;32914:9;32908:4;32904:20;32900:1;32889:9;32885:17;32878:47;32939:131;33065:4;32939:131;;;32931:139;;32835:245;;;;33087:407;;33278:2;33267:9;33263:18;33255:26;;33328:9;33322:4;33318:20;33314:1;33303:9;33299:17;33292:47;33353:131;33479:4;33353:131;;;33345:139;;33249:245;;;;33501:407;;33692:2;33681:9;33677:18;33669:26;;33742:9;33736:4;33732:20;33728:1;33717:9;33713:17;33706:47;33767:131;33893:4;33767:131;;;33759:139;;33663:245;;;;33915:407;;34106:2;34095:9;34091:18;34083:26;;34156:9;34150:4;34146:20;34142:1;34131:9;34127:17;34120:47;34181:131;34307:4;34181:131;;;34173:139;;34077:245;;;;34329:407;;34520:2;34509:9;34505:18;34497:26;;34570:9;34564:4;34560:20;34556:1;34545:9;34541:17;34534:47;34595:131;34721:4;34595:131;;;34587:139;;34491:245;;;;34743:407;;34934:2;34923:9;34919:18;34911:26;;34984:9;34978:4;34974:20;34970:1;34959:9;34955:17;34948:47;35009:131;35135:4;35009:131;;;35001:139;;34905:245;;;;35157:407;;35348:2;35337:9;35333:18;35325:26;;35398:9;35392:4;35388:20;35384:1;35373:9;35369:17;35362:47;35423:131;35549:4;35423:131;;;35415:139;;35319:245;;;;35571:407;;35762:2;35751:9;35747:18;35739:26;;35812:9;35806:4;35802:20;35798:1;35787:9;35783:17;35776:47;35837:131;35963:4;35837:131;;;35829:139;;35733:245;;;;35985:407;;36176:2;36165:9;36161:18;36153:26;;36226:9;36220:4;36216:20;36212:1;36201:9;36197:17;36190:47;36251:131;36377:4;36251:131;;;36243:139;;36147:245;;;;36399:213;;36517:2;36506:9;36502:18;36494:26;;36531:71;36599:1;36588:9;36584:17;36575:6;36531:71;;;36488:124;;;;;36619:205;;36733:2;36722:9;36718:18;36710:26;;36747:67;36811:1;36800:9;36796:17;36787:6;36747:67;;;36704:120;;;;;36831:88;;36908:5;36902:12;36892:22;;36886:33;;;;36927:163;;37042:6;37037:3;37030:19;37079:4;37074:3;37070:14;37055:29;;37023:67;;;;;37098:105;;37167:31;37192:5;37167:31;;;37156:42;;37150:53;;;;37210:92;;37290:5;37283:13;37276:21;37265:32;;37259:43;;;;37309:128;;37389:42;37382:5;37378:54;37367:65;;37361:76;;;;37444:79;;37513:5;37502:16;;37496:27;;;;37530:88;;37608:4;37601:5;37597:16;37586:27;;37580:38;;;;37625:105;;37694:31;37719:5;37694:31;;;37683:42;;37677:53;;;;37737:92;;37817:5;37810:13;37803:21;37792:32;;37786:43;;;;37836:128;;37916:42;37909:5;37905:54;37894:65;;37888:76;;;;37971:79;;38040:5;38029:16;;38023:27;;;;38057:129;;38144:37;38175:5;38144:37;;;38131:50;;38125:61;;;;38193:151;;38287:52;38333:5;38287:52;;;38274:65;;38268:76;;;;38351:130;;38445:31;38470:5;38445:31;;;38432:44;;38426:55;;;;38488:121;;38567:37;38598:5;38567:37;;;38554:50;;38548:61;;;;38616:115;;38695:31;38720:5;38695:31;;;38682:44;;38676:55;;;;38739:268;38804:1;38811:101;38825:6;38822:1;38819:13;38811:101;;;38901:1;38896:3;38892:11;38886:18;38882:1;38877:3;38873:11;38866:39;38847:2;38844:1;38840:10;38835:15;;38811:101;;;38927:6;38924:1;38921:13;38918:2;;;38992:1;38983:6;38978:3;38974:16;38967:27;38918:2;38788:219;;;;;39015:97;;39103:2;39099:7;39094:2;39087:5;39083:14;39079:28;39069:38;;39063:49;;;",
  "source": "pragma solidity 0.5.7;\npragma experimental ABIEncoderV2;\n\nimport { IERC20 } from \"./interface/IERC20.sol\";\nimport { ERC20Taxable } from \"./ERC20Taxable.sol\";\n\n\n/**\n * @title Signal\n * @dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.\n */\ncontract Signal is ERC20Taxable {\n\n    string public version = \"0.0.1\";\n    string public constant name = \"Signal\";\n    string public constant symbol = \"dB\";\n\n    uint8 public constant decimals = 18;\n    uint8 public taxRatePercent;\n    uint8 public signalPerDai;\n\n    IERC20 public dai;\n    address public governance;\n    address public taxCommunityPool;\n    address public taxDevelopmentPool;\n\n    constructor(address _governance, uint8 _taxRatePercent, address _taxCommunityPool, address _taxDevelopmentPool, IERC20 _dai, uint8 _signalPerDai) public ERC20Taxable(_governance, _taxRatePercent, _taxCommunityPool, _taxDevelopmentPool, _dai, _signalPerDai) {\n        governance = _governance;\n        taxRatePercent = _taxRatePercent;\n        taxCommunityPool = _taxCommunityPool;\n        taxDevelopmentPool = _taxDevelopmentPool;\n        dai = _dai;\n        signalPerDai = _signalPerDai;\n    }\n\n    function mint(uint256 signalValue) public {\n        require(\n            signalValue.mod(10000) == 0,\n            \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\"\n        );\n        require(\n            totalSupply().add(signalValue) > 0,\n            \"Signal::mint: Supply would exceed maximum safe uint (2^256).\"\n        );\n        require(\n            dai.allowance(msg.sender, address(this)) >= signalValue.div(signalPerDai),\n            \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\"\n        );\n        require(\n            dai.transferFrom(msg.sender, address(this), signalValue.div(signalPerDai)),\n            \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\"\n        );\n        require(\n            signalValue.div(signalPerDai).mul(signalPerDai) == signalValue,\n            \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\"\n        );\n        _mint(msg.sender, signalValue);\n    }\n\n    function withdraw(uint256 signalValue) public {\n        require(\n            signalValue.mod(10000) == 0,\n            \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\"\n        );\n        require(\n            msg.sender != 0x0000000000000000000000000000000000000000,\n            \"Signal::withdraw: Withdraw address can not be void address\"\n        );\n        require(\n            balanceOf(msg.sender).sub(signalValue) >= 0,\n            \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\"\n        );\n        require(\n            dai.balanceOf(address(this)) >= signalValue.div(signalPerDai),\n            \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\"\n        );\n        _withdraw(msg.sender, signalValue.div(signalPerDai), signalValue);\n    }\n\n    function getTaxedValue(uint256 _value) public view returns(uint256) {\n        // This function simulates transaction taxation, the internal _tax function should be used for actual Signal taxation\n        require(\n            _value.mod(10000) == 0,\n            \"ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\"\n        );\n        uint256 taxValue = _value.mul(taxRatePercent).div(100); // Whole value of taxable _value\n        require(taxValue > 0, \"_tax: averted\");\n        uint256 amountMinusTax = _value.sub(taxValue); // Total transfer minus tax\n        require(amountMinusTax > 0, \"_tax: pointless transaction\");\n        return amountMinusTax;\n    }\n\n    function setTaxCommunityPool(address _taxCommunityPool) public {\n        require(msg.sender == governance, \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\");\n        taxCommunityPool = _taxCommunityPool;\n    }\n\n    function setTaxDevelopmentPool(address _taxDevelopmentPool) public {\n        require(msg.sender == governance, \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\");\n        taxDevelopmentPool = _taxDevelopmentPool;\n    }\n\n}\n",
  "sourcePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
  "ast": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
    "exportedSymbols": {
      "Signal": [
        2737
      ]
    },
    "id": 2738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2429,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "id": 2430,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:10"
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol",
        "file": "./interface/IERC20.sol",
        "id": 2432,
        "nodeType": "ImportDirective",
        "scope": 2738,
        "sourceUnit": 6469,
        "src": "58:48:10",
        "symbolAliases": [
          {
            "foreign": 2431,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol",
        "file": "./ERC20Taxable.sol",
        "id": 2434,
        "nodeType": "ImportDirective",
        "scope": 2738,
        "sourceUnit": 819,
        "src": "107:50:10",
        "symbolAliases": [
          {
            "foreign": 2433,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2435,
              "name": "ERC20Taxable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 818,
              "src": "326:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Taxable_$818",
                "typeString": "contract ERC20Taxable"
              }
            },
            "id": 2436,
            "nodeType": "InheritanceSpecifier",
            "src": "326:12:10"
          }
        ],
        "contractDependencies": [
          818,
          6468
        ],
        "contractKind": "contract",
        "documentation": "@title Signal\n@dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
        "fullyImplemented": true,
        "id": 2737,
        "linearizedBaseContracts": [
          2737,
          818,
          6468
        ],
        "name": "Signal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2439,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "346:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2437,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "346:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 2438,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "370:7:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2442,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "383:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2440,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5369676e616c",
              "id": 2441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:8:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d62872fb70a2cde8b5502173f0f27a87945c1aad1b88a223d6b8f808546b59b8",
                "typeString": "literal_string \"Signal\""
              },
              "value": "Signal"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2445,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "427:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2443,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "6442",
              "id": 2444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:4:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                "typeString": "literal_string \"dB\""
              },
              "value": "dB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2448,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "470:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2446,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "470:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 2447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2450,
            "name": "taxRatePercent",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "511:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2449,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2452,
            "name": "signalPerDai",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "544:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2451,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "544:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2454,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "576:17:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6468",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2453,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6468,
              "src": "576:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6468",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2456,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "599:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2455,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2458,
            "name": "taxCommunityPool",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "630:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2457,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2460,
            "name": "taxDevelopmentPool",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "667:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2459,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2507,
              "nodeType": "Block",
              "src": "964:237:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2483,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "974:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2484,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2462,
                      "src": "987:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "974:24:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2487,
                      "name": "taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2450,
                      "src": "1008:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2488,
                      "name": "_taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2464,
                      "src": "1025:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1008:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2490,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2491,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "1050:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2492,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2466,
                      "src": "1069:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1050:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2494,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2495,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "1096:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2496,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2468,
                      "src": "1117:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1096:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:40:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "1146:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6468",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2500,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "1152:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6468",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1146:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:10:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2503,
                      "name": "signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2452,
                      "src": "1166:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2504,
                      "name": "_signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2472,
                      "src": "1181:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1166:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:28:10"
                }
              ]
            },
            "documentation": null,
            "id": 2508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2475,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2462,
                    "src": "873:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2476,
                    "name": "_taxRatePercent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2464,
                    "src": "886:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2477,
                    "name": "_taxCommunityPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2466,
                    "src": "903:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2478,
                    "name": "_taxDevelopmentPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2468,
                    "src": "922:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2479,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2470,
                    "src": "943:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2480,
                    "name": "_signalPerDai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2472,
                    "src": "949:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2474,
                  "name": "ERC20Taxable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 818,
                  "src": "860:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Taxable_$818_$",
                    "typeString": "type(contract ERC20Taxable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "860:103:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "719:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2464,
                  "name": "_taxRatePercent",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "740:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2463,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2466,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "763:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2468,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "790:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2470,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "819:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$6468",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2469,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6468,
                    "src": "819:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2472,
                  "name": "_signalPerDai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "832:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:134:10"
            },
            "returnParameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:10"
            },
            "scope": 2737,
            "src": "707:494:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2586,
              "nodeType": "Block",
              "src": "1249:1096:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1296:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2514,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1280:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "1280:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1280:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1280:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f6620746865205369676e616c20616d6f756e74202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1259:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2527,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1520:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2524,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "1502:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1502:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7757,
                            "src": "1502:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1502:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1535:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1502:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20537570706c7920776f756c6420657863656564206d6178696d756d20736166652075696e742028325e323536292e",
                        "id": 2531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:62:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        },
                        "value": "Signal::mint: Supply would exceed maximum safe uint (2^256)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        }
                      ],
                      "id": 2523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1481:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:141:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2533,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:141:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2537,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8301,
                                "src": "1667:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1667:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2540,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8353,
                                  "src": "1687:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1679:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2535,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "1653:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$6468",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6425,
                            "src": "1653:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2545,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "1713:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2543,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1697:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7707,
                            "src": "1697:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1697:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1653:73:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a2044414920616c6c6f77616e6365206973206e6f742073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:86:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI allowance is not sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:204:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2550,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:204:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2554,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8301,
                              "src": "1884:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1884:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2557,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8353,
                                "src": "1904:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Signal_$2737",
                                  "typeString": "contract Signal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Signal_$2737",
                                  "typeString": "contract Signal"
                                }
                              ],
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1896:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2561,
                                "name": "signalPerDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2452,
                                "src": "1927:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2559,
                                "name": "signalValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2510,
                                "src": "1911:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7707,
                              "src": "1911:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1911:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2552,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2454,
                            "src": "1867:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$6468",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6445,
                          "src": "1867:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1867:74:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20444149207472616e73666572206661696c65642c206d616b652073757265204441492062616c616e63652069732073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1955:111:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1846:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:230:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:230:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2573,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "2141:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2570,
                                  "name": "signalPerDai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2452,
                                  "src": "2123:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2568,
                                  "name": "signalValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2510,
                                  "src": "2107:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7707,
                                "src": "2107:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2107:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7682,
                            "src": "2107:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2575,
                          "name": "signalValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2510,
                          "src": "2158:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b2028747279207573696e67206c6573732064656772656573206f6620707265636973696f6e2f646563696d616c20706c61636573292e",
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:105:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        },
                        "value": "Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        }
                      ],
                      "id": 2567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2086:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "2314:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2314:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2583,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2510,
                        "src": "2326:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2580,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2308:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2585,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 2587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2510,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2587,
                  "src": "1221:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:21:10"
            },
            "returnParameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:10"
            },
            "scope": 2737,
            "src": "1207:1138:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2648,
              "nodeType": "Block",
              "src": "2397:868:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2444:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2593,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "2428:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "2428:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2428:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a5f77697468647261773a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2407:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2603,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "2650:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2650:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 2605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2664:42:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "2650:56:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a20576974686472617720616464726573732063616e206e6f7420626520766f69642061646472657373",
                        "id": 2607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:60:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        },
                        "value": "Signal::withdraw: Withdraw address can not be void address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        }
                      ],
                      "id": 2602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2629:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:161:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2609,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:161:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2616,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "2847:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2612,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8301,
                                    "src": "2831:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2831:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2611,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "2821:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7732,
                            "src": "2821:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2821:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2821:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a205769746864726177206164647265737320646f6573206e6f7420686176652062616c616e63652073756666696369656e7420746f2066756c66696c2077697468647261772072657175657374",
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:96:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        },
                        "value": "Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        }
                      ],
                      "id": 2610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2800:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:184:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:184:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2627,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8353,
                                  "src": "3037:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3029:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3029:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2624,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "3015:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$6468",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6407,
                            "src": "3015:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2632,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "3063:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2630,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "3047:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7707,
                            "src": "3047:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3015:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a204441492072657365727665206973206e6f74206c6172676520656e6f75676820746f2066756c66696c20746869732077697468647261772072657175657374",
                        "id": 2635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3090:83:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        },
                        "value": "Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2994:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2994:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:189:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "3203:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3203:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2643,
                            "name": "signalPerDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2452,
                            "src": "3231:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2641,
                            "name": "signalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2589,
                            "src": "3215:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7707,
                          "src": "3215:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2645,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "3246:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2638,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "3193:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:65:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:65:10"
                }
              ]
            },
            "documentation": null,
            "id": 2649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "2369:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2368:21:10"
            },
            "returnParameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:10"
            },
            "scope": 2737,
            "src": "2351:914:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "3339:659:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3507:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2657,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "3496:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "3496:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3496:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3517:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3496:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a3a5f7461783a205f76616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3532:122:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6ae2fc956de350023120bef5da60e6f72bc15c8ff7acfe29ccbe3420275a81",
                          "typeString": "literal_string \"ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6ae2fc956de350023120bef5da60e6f72bc15c8ff7acfe29ccbe3420275a81",
                          "typeString": "literal_string \"ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3475:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2665,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:189:10"
                },
                {
                  "assignments": [
                    2667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2667,
                      "name": "taxValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 2699,
                      "src": "3674:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2675,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3724:3:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2670,
                            "name": "taxRatePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2450,
                            "src": "3704:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2668,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2651,
                            "src": "3693:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7682,
                          "src": "3693:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3693:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7707,
                      "src": "3693:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:54:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2677,
                          "name": "taxValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2667,
                          "src": "3779:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3790:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3779:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f7461783a2061766572746564",
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:15:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7780d6d2f10522b39f6a9cbc230dfc10c5f27d742e728e5111f394c0651a2c",
                          "typeString": "literal_string \"_tax: averted\""
                        },
                        "value": "_tax: averted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7780d6d2f10522b39f6a9cbc230dfc10c5f27d742e728e5111f394c0651a2c",
                          "typeString": "literal_string \"_tax: averted\""
                        }
                      ],
                      "id": 2676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3771:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2682,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:38:10"
                },
                {
                  "assignments": [
                    2684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2684,
                      "name": "amountMinusTax",
                      "nodeType": "VariableDeclaration",
                      "scope": 2699,
                      "src": "3819:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3819:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2689,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "taxValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "3855:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2685,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "3844:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7732,
                      "src": "3844:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3819:45:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2691,
                          "name": "amountMinusTax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2684,
                          "src": "3910:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3927:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3910:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f7461783a20706f696e746c657373207472616e73616374696f6e",
                        "id": 2694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3930:29:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c70522dfea6364d75cc95ed59738203dda4f27fe6b5c36ebc828980ed58951",
                          "typeString": "literal_string \"_tax: pointless transaction\""
                        },
                        "value": "_tax: pointless transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c70522dfea6364d75cc95ed59738203dda4f27fe6b5c36ebc828980ed58951",
                          "typeString": "literal_string \"_tax: pointless transaction\""
                        }
                      ],
                      "id": 2690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3902:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:58:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:58:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "name": "amountMinusTax",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2684,
                    "src": "3977:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2655,
                  "id": 2698,
                  "nodeType": "Return",
                  "src": "3970:21:10"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaxedValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2651,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3294:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:16:10"
            },
            "returnParameters": {
              "id": 2655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2654,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3330:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3329:9:10"
            },
            "scope": 2737,
            "src": "3271:727:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2717,
              "nodeType": "Block",
              "src": "4067:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "4085:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4085:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2708,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "4099:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4085:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178436f6d6d756e697479506f6f6c3a20436f6d6d756e6974792074617820706f6f6c20616464726573732063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4111:92:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        },
                        "value": "Governance::setTaxCommunityPool: Community tax pool address can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        }
                      ],
                      "id": 2705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "4077:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4077:127:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2712,
                  "nodeType": "ExpressionStatement",
                  "src": "4077:127:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2713,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "4214:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2714,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2702,
                      "src": "4233:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4214:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:36:10"
                }
              ]
            },
            "documentation": null,
            "id": 2718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxCommunityPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2718,
                  "src": "4033:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4032:27:10"
            },
            "returnParameters": {
              "id": 2704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4067:0:10"
            },
            "scope": 2737,
            "src": "4004:253:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2735,
              "nodeType": "Block",
              "src": "4330:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2724,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "4348:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4348:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2726,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "4362:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4348:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178446576656c6f706d656e74506f6f6c3a20446576656c6f706d656e742074617820706f6f6c2063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4374:88:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        },
                        "value": "Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        }
                      ],
                      "id": 2723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "4340:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:123:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2730,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:123:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2731,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "4473:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2732,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "4494:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4473:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2734,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 2736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxDevelopmentPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2720,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2736,
                  "src": "4294:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4293:29:10"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:10"
            },
            "scope": 2737,
            "src": "4263:257:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2738,
        "src": "307:4216:10"
      }
    ],
    "src": "0:4524:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/Signal.sol",
    "exportedSymbols": {
      "Signal": [
        2737
      ]
    },
    "id": 2738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2429,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:10"
      },
      {
        "id": 2430,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:10"
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/interface/IERC20.sol",
        "file": "./interface/IERC20.sol",
        "id": 2432,
        "nodeType": "ImportDirective",
        "scope": 2738,
        "sourceUnit": 6469,
        "src": "58:48:10",
        "symbolAliases": [
          {
            "foreign": 2431,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaywelsh/GitHub/society0x/ethereum/contracts/ERC20Taxable.sol",
        "file": "./ERC20Taxable.sol",
        "id": 2434,
        "nodeType": "ImportDirective",
        "scope": 2738,
        "sourceUnit": 819,
        "src": "107:50:10",
        "symbolAliases": [
          {
            "foreign": 2433,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2435,
              "name": "ERC20Taxable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 818,
              "src": "326:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Taxable_$818",
                "typeString": "contract ERC20Taxable"
              }
            },
            "id": 2436,
            "nodeType": "InheritanceSpecifier",
            "src": "326:12:10"
          }
        ],
        "contractDependencies": [
          818,
          6468
        ],
        "contractKind": "contract",
        "documentation": "@title Signal\n@dev ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
        "fullyImplemented": true,
        "id": 2737,
        "linearizedBaseContracts": [
          2737,
          818,
          6468
        ],
        "name": "Signal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2439,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "346:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2437,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "346:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e31",
              "id": 2438,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "370:7:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                "typeString": "literal_string \"0.0.1\""
              },
              "value": "0.0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2442,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "383:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2440,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5369676e616c",
              "id": 2441,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:8:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d62872fb70a2cde8b5502173f0f27a87945c1aad1b88a223d6b8f808546b59b8",
                "typeString": "literal_string \"Signal\""
              },
              "value": "Signal"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2445,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "427:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2443,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "6442",
              "id": 2444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:4:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b9189049f34015a23b1cecbed07a737cf1af19178a2e84f6de249ba907536325",
                "typeString": "literal_string \"dB\""
              },
              "value": "dB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2448,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "470:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2446,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "470:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 2447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "503:2:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2450,
            "name": "taxRatePercent",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "511:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2449,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "511:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2452,
            "name": "signalPerDai",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "544:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2451,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "544:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2454,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "576:17:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6468",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2453,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6468,
              "src": "576:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6468",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2456,
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "599:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2455,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "599:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2458,
            "name": "taxCommunityPool",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "630:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2457,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2460,
            "name": "taxDevelopmentPool",
            "nodeType": "VariableDeclaration",
            "scope": 2737,
            "src": "667:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2459,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2507,
              "nodeType": "Block",
              "src": "964:237:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2483,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "974:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2484,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2462,
                      "src": "987:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "974:24:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2487,
                      "name": "taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2450,
                      "src": "1008:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2488,
                      "name": "_taxRatePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2464,
                      "src": "1025:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1008:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2490,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:32:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2491,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "1050:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2492,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2466,
                      "src": "1069:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1050:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2494,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2495,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "1096:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2496,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2468,
                      "src": "1117:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1096:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:40:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2499,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "1146:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6468",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2500,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "1152:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6468",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1146:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:10:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2503,
                      "name": "signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2452,
                      "src": "1166:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2504,
                      "name": "_signalPerDai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2472,
                      "src": "1181:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1166:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:28:10"
                }
              ]
            },
            "documentation": null,
            "id": 2508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2475,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2462,
                    "src": "873:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2476,
                    "name": "_taxRatePercent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2464,
                    "src": "886:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2477,
                    "name": "_taxCommunityPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2466,
                    "src": "903:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2478,
                    "name": "_taxDevelopmentPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2468,
                    "src": "922:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2479,
                    "name": "_dai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2470,
                    "src": "943:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2480,
                    "name": "_signalPerDai",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2472,
                    "src": "949:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2474,
                  "name": "ERC20Taxable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 818,
                  "src": "860:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Taxable_$818_$",
                    "typeString": "type(contract ERC20Taxable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "860:103:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "719:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2464,
                  "name": "_taxRatePercent",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "740:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2463,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2466,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "763:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2468,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "790:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2470,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "819:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$6468",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2469,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6468,
                    "src": "819:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6468",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2472,
                  "name": "_signalPerDai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "832:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:134:10"
            },
            "returnParameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:10"
            },
            "scope": 2737,
            "src": "707:494:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2586,
              "nodeType": "Block",
              "src": "1249:1096:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1296:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2514,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1280:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "1280:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1280:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1306:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1280:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f6620746865205369676e616c20616d6f756e74202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46190c23b0ba63035b95265d9c4e4c34932e863b8e5a4a5227eec06ba05cf699",
                          "typeString": "literal_string \"Signal::mint: Signal input value must contain zero in the last 4 units of the Signal amount (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1259:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2527,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1520:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2524,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "1502:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1502:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7757,
                            "src": "1502:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1502:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1535:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1502:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20537570706c7920776f756c6420657863656564206d6178696d756d20736166652075696e742028325e323536292e",
                        "id": 2531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1550:62:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        },
                        "value": "Signal::mint: Supply would exceed maximum safe uint (2^256)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff002e4c42b6702cbd1021fc6e691deee021ff2306724d99867fde93b74f9baf",
                          "typeString": "literal_string \"Signal::mint: Supply would exceed maximum safe uint (2^256).\""
                        }
                      ],
                      "id": 2523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1481:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:141:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2533,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:141:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2537,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8301,
                                "src": "1667:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1667:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2540,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8353,
                                  "src": "1687:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1679:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2535,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "1653:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$6468",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6425,
                            "src": "1653:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2545,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "1713:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2543,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2510,
                              "src": "1697:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7707,
                            "src": "1697:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1697:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1653:73:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a2044414920616c6c6f77616e6365206973206e6f742073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:86:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI allowance is not sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab069e8203e5319a19931d26ea50f97b08d73e326cfb72ab545ada6d7e83c9dd",
                          "typeString": "literal_string \"Signal::mint: DAI allowance is not sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:204:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2550,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:204:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2554,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8301,
                              "src": "1884:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1884:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2557,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8353,
                                "src": "1904:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Signal_$2737",
                                  "typeString": "contract Signal"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Signal_$2737",
                                  "typeString": "contract Signal"
                                }
                              ],
                              "id": 2556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1896:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2561,
                                "name": "signalPerDai",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2452,
                                "src": "1927:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2559,
                                "name": "signalValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2510,
                                "src": "1911:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7707,
                              "src": "1911:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1911:29:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2552,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2454,
                            "src": "1867:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$6468",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6445,
                          "src": "1867:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1867:74:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20444149207472616e73666572206661696c65642c206d616b652073757265204441492062616c616e63652069732073756666696369656e7420666f72206d696e74696e67207265717565737465642076616c7565206f66205369676e616c2e",
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1955:111:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        },
                        "value": "Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5cd4811e8d5925cb5c6d08bb9624a06fd0f6ea47a0ea56e5d6795ffc1d78b54",
                          "typeString": "literal_string \"Signal::mint: DAI transfer failed, make sure DAI balance is sufficient for minting requested value of Signal.\""
                        }
                      ],
                      "id": 2551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "1846:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:230:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:230:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2573,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "2141:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2570,
                                  "name": "signalPerDai",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2452,
                                  "src": "2123:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2568,
                                  "name": "signalValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2510,
                                  "src": "2107:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7707,
                                "src": "2107:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2107:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7682,
                            "src": "2107:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2575,
                          "name": "signalValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2510,
                          "src": "2158:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:62:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a6d696e743a20205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b2028747279207573696e67206c6573732064656772656573206f6620707265636973696f6e2f646563696d616c20706c61636573292e",
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:105:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        },
                        "value": "Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7f467bcf53ee7114934779af0a80f9ce4ec718d748c4d759961faca18c4f77",
                          "typeString": "literal_string \"Signal::mint:  Signal undercollatoralisation risk (try using less degrees of precision/decimal places).\""
                        }
                      ],
                      "id": 2567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2086:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "2314:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2314:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2583,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2510,
                        "src": "2326:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2580,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "2308:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2585,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 2587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2510,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2587,
                  "src": "1221:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:21:10"
            },
            "returnParameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:10"
            },
            "scope": 2737,
            "src": "1207:1138:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2648,
              "nodeType": "Block",
              "src": "2397:868:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2444:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2593,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "2428:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "2428:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2428:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a5f77697468647261773a205369676e616c20696e7075742076616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:140:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_829bed4ec8e786b8090dd3a9df70113667c3edbab4ec1e21c4decfb5afb2fccb",
                          "typeString": "literal_string \"Signal::_withdraw: Signal input value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2407:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:212:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:212:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2603,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "2650:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2650:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 2605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2664:42:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "2650:56:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a20576974686472617720616464726573732063616e206e6f7420626520766f69642061646472657373",
                        "id": 2607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:60:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        },
                        "value": "Signal::withdraw: Withdraw address can not be void address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4ea43919c26eebaade1db9e037a6f6494421df89ba5d629a509ba601d0d3f2f",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address can not be void address\""
                        }
                      ],
                      "id": 2602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2629:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:161:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2609,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:161:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2616,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "2847:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2612,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8301,
                                    "src": "2831:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2831:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2611,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 242,
                                "src": "2821:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7732,
                            "src": "2821:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2821:38:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2821:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a205769746864726177206164647265737320646f6573206e6f7420686176652062616c616e63652073756666696369656e7420746f2066756c66696c2077697468647261772072657175657374",
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:96:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        },
                        "value": "Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_102842f861ab5241d32a4d73b06ea4bc95bb06938cfabe46bf6c1b31670754a9",
                          "typeString": "literal_string \"Signal::withdraw: Withdraw address does not have balance sufficient to fulfil withdraw request\""
                        }
                      ],
                      "id": 2610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2800:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:184:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:184:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2627,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8353,
                                  "src": "3037:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Signal_$2737",
                                    "typeString": "contract Signal"
                                  }
                                ],
                                "id": 2626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3029:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 2628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3029:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2624,
                              "name": "dai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "3015:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$6468",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6407,
                            "src": "3015:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2632,
                              "name": "signalPerDai",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "3063:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2630,
                              "name": "signalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2589,
                              "src": "3047:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7707,
                            "src": "3047:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3015:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e616c3a3a77697468647261773a204441492072657365727665206973206e6f74206c6172676520656e6f75676820746f2066756c66696c20746869732077697468647261772072657175657374",
                        "id": 2635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3090:83:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        },
                        "value": "Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17bc025566891abc6c862db1fb954ea03d376fcba9e5bdc1b7d905b967854ce",
                          "typeString": "literal_string \"Signal::withdraw: DAI reserve is not large enough to fulfil this withdraw request\""
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "2994:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2994:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "2994:189:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "3203:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3203:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2643,
                            "name": "signalPerDai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2452,
                            "src": "3231:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2641,
                            "name": "signalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2589,
                            "src": "3215:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7707,
                          "src": "3215:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2645,
                        "name": "signalValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "3246:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2638,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "3193:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3193:65:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "3193:65:10"
                }
              ]
            },
            "documentation": null,
            "id": 2649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "name": "signalValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "2369:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2368:21:10"
            },
            "returnParameters": {
              "id": 2591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:10"
            },
            "scope": 2737,
            "src": "2351:914:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2699,
              "nodeType": "Block",
              "src": "3339:659:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3507:5:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2657,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2651,
                              "src": "3496:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7778,
                            "src": "3496:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3496:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3517:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3496:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a3a5f7461783a205f76616c7565206d75737420636f6e7461696e207a65726f20696e20746865206c617374203420756e697473206f66207468652077656920756e6974202870726576656e7473205369676e616c20756e646572636f6c6c61746f72616c69736174696f6e207269736b292e",
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3532:122:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6ae2fc956de350023120bef5da60e6f72bc15c8ff7acfe29ccbe3420275a81",
                          "typeString": "literal_string \"ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        },
                        "value": "ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk)."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6ae2fc956de350023120bef5da60e6f72bc15c8ff7acfe29ccbe3420275a81",
                          "typeString": "literal_string \"ERC20::_tax: _value must contain zero in the last 4 units of the wei unit (prevents Signal undercollatoralisation risk).\""
                        }
                      ],
                      "id": 2656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3475:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:189:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2665,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:189:10"
                },
                {
                  "assignments": [
                    2667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2667,
                      "name": "taxValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 2699,
                      "src": "3674:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2675,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3724:3:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2670,
                            "name": "taxRatePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2450,
                            "src": "3704:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2668,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2651,
                            "src": "3693:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7682,
                          "src": "3693:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3693:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7707,
                      "src": "3693:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:54:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2677,
                          "name": "taxValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2667,
                          "src": "3779:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3790:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3779:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f7461783a2061766572746564",
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3793:15:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc7780d6d2f10522b39f6a9cbc230dfc10c5f27d742e728e5111f394c0651a2c",
                          "typeString": "literal_string \"_tax: averted\""
                        },
                        "value": "_tax: averted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc7780d6d2f10522b39f6a9cbc230dfc10c5f27d742e728e5111f394c0651a2c",
                          "typeString": "literal_string \"_tax: averted\""
                        }
                      ],
                      "id": 2676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3771:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2682,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:38:10"
                },
                {
                  "assignments": [
                    2684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2684,
                      "name": "amountMinusTax",
                      "nodeType": "VariableDeclaration",
                      "scope": 2699,
                      "src": "3819:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3819:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2689,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "taxValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "3855:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2685,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "3844:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7732,
                      "src": "3844:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3819:45:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2691,
                          "name": "amountMinusTax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2684,
                          "src": "3910:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3927:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3910:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f7461783a20706f696e746c657373207472616e73616374696f6e",
                        "id": 2694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3930:29:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c70522dfea6364d75cc95ed59738203dda4f27fe6b5c36ebc828980ed58951",
                          "typeString": "literal_string \"_tax: pointless transaction\""
                        },
                        "value": "_tax: pointless transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c70522dfea6364d75cc95ed59738203dda4f27fe6b5c36ebc828980ed58951",
                          "typeString": "literal_string \"_tax: pointless transaction\""
                        }
                      ],
                      "id": 2690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "3902:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3902:58:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:58:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2697,
                    "name": "amountMinusTax",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2684,
                    "src": "3977:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2655,
                  "id": 2698,
                  "nodeType": "Return",
                  "src": "3970:21:10"
                }
              ]
            },
            "documentation": null,
            "id": 2700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaxedValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2651,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3294:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:16:10"
            },
            "returnParameters": {
              "id": 2655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2654,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2700,
                  "src": "3330:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3330:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3329:9:10"
            },
            "scope": 2737,
            "src": "3271:727:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2717,
              "nodeType": "Block",
              "src": "4067:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "4085:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4085:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2708,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "4099:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4085:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178436f6d6d756e697479506f6f6c3a20436f6d6d756e6974792074617820706f6f6c20616464726573732063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4111:92:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        },
                        "value": "Governance::setTaxCommunityPool: Community tax pool address can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_257f8495825deb361fadc5677059725544de271013b7271cd2bce9c510d241d6",
                          "typeString": "literal_string \"Governance::setTaxCommunityPool: Community tax pool address can only be set via governance\""
                        }
                      ],
                      "id": 2705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "4077:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4077:127:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2712,
                  "nodeType": "ExpressionStatement",
                  "src": "4077:127:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2713,
                      "name": "taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "4214:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2714,
                      "name": "_taxCommunityPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2702,
                      "src": "4233:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4214:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:36:10"
                }
              ]
            },
            "documentation": null,
            "id": 2718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxCommunityPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "name": "_taxCommunityPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2718,
                  "src": "4033:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4032:27:10"
            },
            "returnParameters": {
              "id": 2704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4067:0:10"
            },
            "scope": 2737,
            "src": "4004:253:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2735,
              "nodeType": "Block",
              "src": "4330:190:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2724,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8301,
                            "src": "4348:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4348:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2726,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "4362:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4348:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "476f7665726e616e63653a3a736574546178446576656c6f706d656e74506f6f6c3a20446576656c6f706d656e742074617820706f6f6c2063616e206f6e6c79206265207365742076696120676f7665726e616e6365",
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4374:88:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        },
                        "value": "Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_858ca2211706a3952ca82c5761e7192055109868c3e96af21be30ea27182a625",
                          "typeString": "literal_string \"Governance::setTaxDevelopmentPool: Development tax pool can only be set via governance\""
                        }
                      ],
                      "id": 2723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8304,
                        8305
                      ],
                      "referencedDeclaration": 8305,
                      "src": "4340:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:123:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2730,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:123:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2731,
                      "name": "taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2460,
                      "src": "4473:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2732,
                      "name": "_taxDevelopmentPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "4494:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4473:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2734,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:40:10"
                }
              ]
            },
            "documentation": null,
            "id": 2736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTaxDevelopmentPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2720,
                  "name": "_taxDevelopmentPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2736,
                  "src": "4294:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4293:29:10"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:0:10"
            },
            "scope": 2737,
            "src": "4263:257:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2738,
        "src": "307:4216:10"
      }
    ],
    "src": "0:4524:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x800f0710d5627fe1155e84a30f52e968a8b0df991b6f2538e4ab459786289a32": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "taxAmount",
              "type": "uint256"
            }
          ],
          "name": "Tax",
          "type": "event",
          "signature": "0x800f0710d5627fe1155e84a30f52e968a8b0df991b6f2538e4ab459786289a32"
        }
      },
      "links": {},
      "address": "0xcB6Df7E934Ee21c8fA4289adE20bE1033337977C",
      "transactionHash": "0x5f46e2151a29496d4f7e39800a9e590044cf907b727b7cab0f255c606df9ff53"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-04T19:22:40.770Z",
  "devdoc": {
    "details": "ERC20Taxable Signal token can be used for constructive or destructive interference in harmony with other signals.",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Signal"
  },
  "userdoc": {
    "methods": {}
  }
}